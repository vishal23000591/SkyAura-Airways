import { Filter, FilterLogicalOperator, MapType, QueryParameters, SpatialFilter } from '../types.js';
import { ModelRequestOptions } from './common.js';
import { ApiVersion } from '../constants.js';
import { SpatialDataType, SpatialFilterPolyfillMode } from '../sources/types.js';
/** @privateRemarks Source: @carto/react-api */
declare const AVAILABLE_MODELS: readonly ["category", "histogram", "formula", "pick", "timeseries", "range", "scatterplot", "table"];
export type Model = (typeof AVAILABLE_MODELS)[number];
export interface ModelSource {
    type: MapType;
    apiVersion: ApiVersion;
    apiBaseUrl: string;
    accessToken: string;
    clientId: string;
    connectionName: string;
    data: string;
    filters?: Record<string, Filter>;
    filtersLogicalOperator?: FilterLogicalOperator;
    spatialFilter?: SpatialFilter;
    queryParameters?: QueryParameters;
    spatialDataColumn?: string;
    spatialDataType?: SpatialDataType;
    spatialFiltersMode?: SpatialFilterPolyfillMode;
    /** original resolution of the spatial index data as stored in the DW */
    dataResolution?: number;
}
/**
 * Execute a SQL model request.
 * @privateRemarks Source: @carto/react-api
 */
export declare function executeModel(props: {
    model: Model;
    source: ModelSource;
    params: Record<string, unknown>;
    opts?: Partial<ModelRequestOptions>;
}): Promise<any>;
export {};
