/// <reference types="../../index.d.ts" />
import { PropertyValues } from 'lit';
import { PublicLitElement as LitElement, JsxNode, TargetedEvent } from '@arcgis/lumina';
import { Layout, Scale, Status } from '../interfaces';
import { IconNameOrString } from '../calcite-icon/interfaces';
import { RadioButton } from '../calcite-radio-button/customElement.js';

/** @slot  - A slot for adding `calcite-radio-button`s. */
export declare class RadioButtonGroup extends LitElement {
    /**
     * When `true`, interaction is prevented and the component is displayed with lower opacity.
     *
     * @default false
     */
    disabled: boolean;
    /**
     * Defines the layout of the component.
     *
     * @default "horizontal"
     */
    layout: Extract<"horizontal" | "vertical" | "grid", Layout>;
    /**
     * Specifies the name of the component on form submission. Must be unique to other component instances.
     *
     * @required
     */
    name: string;
    /**
     * When `true` and the component resides in a form,
     * the component must have a value in order for the form to submit.
     *
     * @default false
     */
    required: boolean;
    /**
     * Specifies the size of the component.
     *
     * @default "m"
     */
    scale: Scale;
    /** Specifies the component's selected item. */
    readonly selectedItem: HTMLCalciteRadioButtonElement;
    /**
     * Specifies the status of the validation message.
     *
     * @default "idle"
     */
    status: Status;
    /** Specifies the validation icon to display under the component. */
    validationIcon: IconNameOrString | boolean;
    /** Specifies the validation message to display under the component. */
    validationMessage: string;
    /** Sets focus on the fist focusable `calcite-radio-button` element in the component. */
    setFocus(): Promise<void>;
    /** Fires when the component has changed. */
    readonly calciteRadioButtonGroupChange: TargetedEvent<this, void>;
}
