/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.2.1 */
import { C as CSS_UTILITY, c as customElement } from "../../chunks/runtime.js";
import { html } from "lit-html";
import { keyed } from "lit-html/directives/keyed.js";
import { createRef, ref } from "lit-html/directives/ref.js";
import { LitElement, createEvent, safeClassMap, nothing } from "@arcgis/lumina";
import { s as slotChangeGetAssignedElements, g as getElementDir } from "../../chunks/dom.js";
import { c as componentFocusable } from "../../chunks/component.js";
import { u as useT9n } from "../../chunks/useT9n.js";
import { css } from "@lit/reactive-element/css-tag.js";
const CSS = {
  container: "container",
  content: "content",
  dropdownVertical: "dropdown--vertical",
  dropdownMenuItems: "dropdown-menu-items",
  dropdownAction: "dropdown-action",
  layoutVertical: "layout--vertical",
  hoverHrefIcon: "hover-href-icon",
  icon: "icon",
  iconBreadcrumb: "icon--breadcrumb",
  iconDropdown: "icon--dropdown",
  iconEnd: "icon--end",
  iconStart: "icon--start",
  isParentVertical: "parent--vertical",
  itemContent: "item-content",
  open: "open",
  nested: "nested",
  textContainer: "text-container"
};
const styles = css`:host{position:relative;box-sizing:border-box;display:flex;align-items:center;flex-shrink:0}:host .container,:host .item-content,:host .content{min-block-size:3rem}:host([layout=vertical]){inline-size:100%}:host(:not([layout=vertical])){block-size:100%}.container,.item-content{display:flex;block-size:100%;inline-size:100%;flex-direction:row;align-items:stretch}.content{position:relative;box-sizing:border-box;display:flex;block-size:100%;inline-size:100%;cursor:pointer;align-items:center;justify-content:center;padding-inline:1rem;font-size:var(--calcite-font-size-0);outline:2px solid transparent;outline-offset:2px;text-decoration:none;padding-block-start:.125rem;border-block-end:.125rem solid var(--calcite-color-transparent);background-color:var(--calcite-menu-background-color, var(--calcite-internal-menu-background-color, var(--calcite-color-foreground-1)));color:var(--calcite-menu-text-color, var(--calcite-internal-menu-text-color, var(--calcite-color-text-2)))}.content:hover{--calcite-internal-menu-background-color: var(--calcite-color-foreground-2)}.content:focus{border-block-end-width:4px;outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))));padding-block-start:.25rem;border-block-end-width:.25rem}.content:active{--calcite-internal-menu-background-color: var(--calcite-color-foreground-3);--calcite-internal-menu-text-color: var(--calcite-color-text-1)}.content span{display:inline-flex}.content.layout--vertical{display:flex;inline-size:100%;justify-content:flex-start;padding-block:1rem;border-block-end:0;border-inline-end:.25rem solid var(--calcite-color-transparent)}:host([layout=vertical]) .content{padding-inline:.75rem}:host([active]) .content{--calcite-internal-menu-text-color: var(--calcite-color-text-1);border-color:var(--calcite-menu-item-accent-color, var(--calcite-color-brand))}:host([active]) .icon{--calcite-internal-menu-item-icon-color: var(--calcite-color-brand)}.icon{color:var(--calcite-menu-text-color, var(--calcite-icon-color, var(--calcite-internal-menu-item-icon-color, var(--calcite-color-text-3))))}.icon--start{margin-inline-end:.75rem}.icon--end{margin-inline-start:.75rem}:host([layout=vertical]) .icon--end{margin-inline-start:auto;padding-inline-start:.75rem}.icon--dropdown{position:relative;margin-inline-start:auto;margin-inline-end:0px;padding-inline-start:.5rem}:host([layout=vertical]) .icon--end~.icon--dropdown{margin-inline-start:.75rem}:host([layout=vertical]) .hover-href-icon{padding-inline-start:.5rem}:host([layout=vertical]) .hover-href-icon~.icon--end{margin-inline-start:.5rem}:host([layout=vertical]) .hover-href-icon~.icon--breadcrumb{margin-inline-start:.75rem}.icon--breadcrumb{margin-inline-end:0px;padding-inline-start:.5rem}:host([layout=vertical]) .icon--breadcrumb{margin-inline-start:auto}:host([layout=vertical]) .icon--breadcrumb~.icon--dropdown{margin-inline-start:.5rem}:host([layout=vertical]) .icon--end~.icon--breadcrumb{margin-inline-start:.5rem}:host([breadcrumb]) .content{padding-inline-end:.75rem}calcite-action{position:relative;block-size:auto;border-inline-start:1px solid var(--calcite-color-foreground-1);--calcite-action-background-color: var(--calcite-menu-background-color);--calcite-action-text-color: var(--calcite-menu-text-color)}calcite-action:after{position:absolute;inset-inline-start:-1px;display:block;inline-size:1px;content:"";inset-block:.75rem;background-color:var(--calcite-color-border-3)}calcite-action:hover:after{block-size:100%;inset-block:0}calcite-action:active{--calcite-action-background-color-press: var(--calcite-menu-background-color)}.content:focus~calcite-action,.content:hover~calcite-action{--calcite-action-text-color: var(--calcite-menu-text-color, var(--calcite-color-text-1))}.content:focus~calcite-action:after,.content:hover~calcite-action:after{block-size:100%;inset-block:0}.dropdown-menu-items{position:absolute;display:none;block-size:auto;min-inline-size:100%;flex-direction:column;overflow:visible;border:1px solid var(--calcite-menu-item-sub-menu-border-color, var(--calcite-color-border-3));border-radius:var(--calcite-menu-item-sub-menu-corner-radius, var(--calcite-corner-radius));inset-block-start:100%;z-index:var(--calcite-z-index-dropdown)}.dropdown-menu-items.open{display:block}.dropdown-menu-items.nested{position:absolute;inset-block-start:-1px;transform:translate(calc(100% - 2px))}.parent--vertical{flex-direction:column}.dropdown--vertical.dropdown-menu-items{position:relative;box-shadow:none;inset-block-start:0;transform:none}.dropdown--vertical.dropdown-menu-items:last-of-type{border-inline:0}:host([layout=vertical]:last-of-type) .dropdown-menu-items{border-block-end:0}:host([slot=submenu-item]) .parent--vertical{padding-inline-start:1.5rem}.dropdown-menu-items.nested.calcite--rtl{transform:translate(calc(-100% + 2px))}.dropdown--vertical.dropdown-menu-items.nested.calcite--rtl{transform:none}.hover-href-icon{position:relative;inset-inline-end:.25rem;margin-inline-start:auto;opacity:0;transition:all var(--calcite-internal-animation-timing-medium) ease-in-out}.content:focus .hover-href-icon,.content:hover .hover-href-icon{inset-inline-end:-.25rem;opacity:1}:host([hidden]){display:none}[hidden]{display:none}`;
class MenuItem extends LitElement {
  constructor() {
    super();
    this.anchorEl = createRef();
    this.dropdownActionEl = createRef();
    this.messages = useT9n();
    this.hasSubmenu = false;
    this.isTopLevelItem = false;
    this.open = false;
    this.calciteInternalMenuItemKeyEvent = createEvent();
    this.calciteMenuItemSelect = createEvent();
    this.listenOn(window, "click", this.handleClickOut);
    this.listen("focusout", this.handleFocusOut);
    this.listen("blur", this.blurHandler);
    this.listen("focus", this.focusHandler);
  }
  static {
    this.properties = { hasSubmenu: [16, {}, { state: true }], submenuItems: [16, {}, { state: true }], active: [7, {}, { reflect: true, type: Boolean }], breadcrumb: [7, {}, { reflect: true, type: Boolean }], href: 1, iconEnd: [3, {}, { reflect: true }], iconFlipRtl: [3, {}, { reflect: true }], iconStart: [3, {}, { reflect: true }], isTopLevelItem: [5, {}, { type: Boolean }], label: 1, layout: [3, {}, { reflect: true }], messageOverrides: [0, {}, { attribute: false }], open: [7, {}, { reflect: true, type: Boolean }], rel: [3, {}, { reflect: true }], target: [3, {}, { reflect: true }], text: 1, topLevelMenuLayout: 1 };
  }
  static {
    this.styles = styles;
  }
  async setFocus() {
    await componentFocusable(this);
    this.anchorEl.value.focus();
  }
  handleClickOut(event) {
    if (this.topLevelMenuLayout !== "vertical" && this.hasSubmenu && this.open && !event.composedPath().includes(this.el)) {
      this.open = false;
    }
  }
  handleFocusOut(event) {
    if (this.topLevelMenuLayout !== "vertical" && !this.el.contains(event.relatedTarget)) {
      this.open = false;
    }
  }
  blurHandler() {
    this.isFocused = false;
  }
  clickHandler(event) {
    if (this.href && event.target === this.dropdownActionEl.value || !this.href && this.hasSubmenu) {
      this.open = !this.open;
    }
    this.selectMenuItem(event);
  }
  focusHandler(event) {
    const target = event.target;
    this.isFocused = true;
    if (target.open && !this.open) {
      target.open = false;
    }
  }
  handleMenuItemSlotChange(event) {
    this.submenuItems = slotChangeGetAssignedElements(event);
    this.submenuItems.forEach((item) => {
      if (!item.topLevelMenuLayout) {
        item.topLevelMenuLayout = this.topLevelMenuLayout;
      }
    });
    this.hasSubmenu = this.submenuItems.length > 0;
  }
  async keyDownHandler(event) {
    const { hasSubmenu, href, layout, open, submenuItems } = this;
    const key = event.key;
    const targetIsDropdown = event.target === this.dropdownActionEl.value;
    if (event.defaultPrevented) {
      return;
    }
    if (key === " " || key === "Enter") {
      if (hasSubmenu && (!href || href && targetIsDropdown)) {
        this.open = !open;
      }
      if (!(href && targetIsDropdown) && key !== "Enter") {
        this.selectMenuItem(event);
      }
      if (key === " " || href && targetIsDropdown) {
        event.preventDefault();
      }
    } else if (key === "Escape") {
      if (open) {
        this.open = false;
        return;
      }
      this.calciteInternalMenuItemKeyEvent.emit({ event });
      event.preventDefault();
    } else if (key === "ArrowDown" || key === "ArrowUp") {
      event.preventDefault();
      if ((targetIsDropdown || !href) && hasSubmenu && !open && layout === "horizontal") {
        this.open = true;
        return;
      }
      this.calciteInternalMenuItemKeyEvent.emit({
        event,
        children: submenuItems,
        isSubmenuOpen: open && hasSubmenu
      });
    } else if (key === "ArrowLeft") {
      event.preventDefault();
      this.calciteInternalMenuItemKeyEvent.emit({
        event,
        children: submenuItems,
        isSubmenuOpen: true
      });
    } else if (key === "ArrowRight") {
      event.preventDefault();
      if ((targetIsDropdown || !href) && hasSubmenu && !open && layout === "vertical") {
        this.open = true;
        return;
      }
      this.calciteInternalMenuItemKeyEvent.emit({
        event,
        children: submenuItems,
        isSubmenuOpen: open && hasSubmenu
      });
    }
  }
  selectMenuItem(event) {
    if (event.target !== this.dropdownActionEl.value) {
      this.calciteMenuItemSelect.emit();
    }
  }
  renderIconStart() {
    return keyed(CSS.iconStart, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconStart}`} .flipRtl=${this.iconFlipRtl === "start" || this.iconFlipRtl === "both"} .icon=${this.iconStart} scale=s></calcite-icon>`);
  }
  renderIconEnd() {
    return keyed(CSS.iconEnd, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconEnd}`} .flipRtl=${this.iconFlipRtl === "end" || this.iconFlipRtl === "both"} .icon=${this.iconEnd} scale=s></calcite-icon>`);
  }
  renderBreadcrumbIcon(dir) {
    return keyed(CSS.iconBreadcrumb, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconBreadcrumb}`} .icon=${dir === "rtl" ? "chevron-left" : "chevron-right"} scale=s></calcite-icon>`);
  }
  renderDropdownIcon(dir) {
    const dirChevron = dir === "rtl" ? "chevron-left" : "chevron-right";
    return keyed(CSS.iconDropdown, html`<calcite-icon class=${`${CSS.icon} ${CSS.iconDropdown}`} .icon=${this.topLevelMenuLayout === "vertical" || this.isTopLevelItem ? this.open ? "chevron-up" : "chevron-down" : dirChevron} scale=s></calcite-icon>`);
  }
  renderDropdownAction(dir) {
    const dirChevron = dir === "rtl" ? "chevron-left" : "chevron-right";
    return keyed(CSS.dropdownAction, html`<calcite-action class=${safeClassMap(CSS.dropdownAction)} .icon=${this.topLevelMenuLayout === "vertical" || this.isTopLevelItem ? this.open ? "chevron-up" : "chevron-down" : dirChevron} @click=${this.clickHandler} @keydown=${this.keyDownHandler} .text=${this.messages.open} ${ref(this.dropdownActionEl)}></calcite-action>`);
  }
  renderSubmenuItems(dir) {
    return html`<calcite-menu class=${safeClassMap({
      [CSS.dropdownMenuItems]: true,
      [CSS.open]: this.open,
      [CSS.nested]: !this.isTopLevelItem,
      [CSS_UTILITY.rtl]: dir === "rtl",
      [CSS.dropdownVertical]: this.topLevelMenuLayout === "vertical"
    })} .label=${this.messages.submenu} layout=vertical role=menu><slot name=submenu-item @slotchange=${this.handleMenuItemSlotChange}></slot></calcite-menu>`;
  }
  renderHrefIcon(dir) {
    return keyed(CSS.hoverHrefIcon, html`<calcite-icon class=${safeClassMap(CSS.hoverHrefIcon)} .icon=${dir === "rtl" ? "arrow-left" : "arrow-right"} scale=s></calcite-icon>`);
  }
  renderItemContent(dir) {
    const hasHref = this.href && (this.topLevelMenuLayout === "vertical" || !this.isTopLevelItem);
    return html`${this.iconStart && this.renderIconStart() || ""}<div class=${safeClassMap(CSS.textContainer)}><span>${this.text}</span></div>${hasHref && this.renderHrefIcon(dir) || ""}${this.iconEnd && this.renderIconEnd() || ""}${this.breadcrumb ? this.renderBreadcrumbIcon(dir) : null}${!this.href && this.hasSubmenu ? this.renderDropdownIcon(dir) : null}`;
  }
  render() {
    const dir = getElementDir(this.el);
    return html`<li class=${safeClassMap({
      [CSS.container]: true,
      [CSS.isParentVertical]: this.topLevelMenuLayout === "vertical"
    })} role=none><div class=${safeClassMap(CSS.itemContent)}><a .ariaCurrent=${this.isFocused ? "page" : false} .ariaExpanded=${this.open} .ariaHasPopup=${this.hasSubmenu} .ariaLabel=${this.label} class=${safeClassMap({ [CSS.layoutVertical]: this.layout === "vertical", [CSS.content]: true })} href=${this.href ?? nothing} @click=${this.clickHandler} @keydown=${this.keyDownHandler} rel=${this.rel ?? nothing} role=menuitem .tabIndex=${this.isTopLevelItem ? 0 : -1} target=${this.target ?? nothing} ${ref(this.anchorEl)}>${this.renderItemContent(dir)}</a>${this.href && this.hasSubmenu ? this.renderDropdownAction(dir) : null}</div>${this.renderSubmenuItems(dir)}</li>`;
  }
}
customElement("calcite-menu-item", MenuItem);
export {
  MenuItem
};
