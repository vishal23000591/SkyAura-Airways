/// <reference types="../../index.d.ts" />
import { PublicLitElement as LitElement, JsxNode, TargetedEvent } from '@arcgis/lumina';
import { HeadingLevel } from '../functional/Heading';

/**
 * @deprecated Use the `calcite-card`, `calcite-notice`, `calcite-panel`, or `calcite-tile` component instead.
 * @slot  - A slot for adding text and a hyperlink.
 * @slot [thumbnail] - A slot for adding an HTML image element.
 */
export declare class Tip extends LitElement {
    /**
     * When `true`, the close button is not present on the component.
     *
     * @default false
     */
    closeDisabled: boolean;
    /**
     * When `true`, the component does not display.
     *
     * @default false
     */
    closed: boolean;
    /** The component header text. */
    heading: string;
    /** Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling. */
    headingLevel: HeadingLevel;
    /** Use this property to override individual strings used by the component. */
    messageOverrides?: typeof this.messages._overrides;
    /**
     * When `true`, the component is selected if it has a parent `calcite-tip-manager`.
     *
     * Only one tip can be selected within the `calcite-tip-manager` parent.
     *
     * @default false
     */
    selected: boolean;
    /** Emits when the component has been closed. */
    readonly calciteTipDismiss: TargetedEvent<this, void>;
    private messages: Partial<{
        close: string;
    }> & import('@arcgis/lumina/controllers').T9nMeta<{
        close: string;
    }>;
}
