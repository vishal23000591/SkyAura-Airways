/// <reference types="../index.d.ts" />
import type { Accordion } from "../components/calcite-accordion";
import type { AccordionItem } from "../components/calcite-accordion-item";
import type { Action } from "../components/calcite-action";
import type { ActionBar } from "../components/calcite-action-bar";
import type { ActionGroup } from "../components/calcite-action-group";
import type { ActionMenu } from "../components/calcite-action-menu";
import type { ActionPad } from "../components/calcite-action-pad";
import type { Alert } from "../components/calcite-alert";
import type { Autocomplete } from "../components/calcite-autocomplete";
import type { AutocompleteItem } from "../components/calcite-autocomplete-item";
import type { AutocompleteItemGroup } from "../components/calcite-autocomplete-item-group";
import type { Avatar } from "../components/calcite-avatar";
import type { Block } from "../components/calcite-block";
import type { BlockGroup } from "../components/calcite-block-group";
import type { BlockSection } from "../components/calcite-block-section";
import type { Button } from "../components/calcite-button";
import type { Card } from "../components/calcite-card";
import type { CardGroup } from "../components/calcite-card-group";
import type { Carousel } from "../components/calcite-carousel";
import type { CarouselItem } from "../components/calcite-carousel-item";
import type { Checkbox } from "../components/calcite-checkbox";
import type { Chip } from "../components/calcite-chip";
import type { ChipGroup } from "../components/calcite-chip-group";
import type { ColorPicker } from "../components/calcite-color-picker";
import type { ColorPickerHexInput } from "../components/calcite-color-picker-hex-input";
import type { ColorPickerSwatch } from "../components/calcite-color-picker-swatch";
import type { Combobox } from "../components/calcite-combobox";
import type { ComboboxItem } from "../components/calcite-combobox-item";
import type { ComboboxItemGroup } from "../components/calcite-combobox-item-group";
import type { DatePicker } from "../components/calcite-date-picker";
import type { DatePickerDay } from "../components/calcite-date-picker-day";
import type { DatePickerMonth } from "../components/calcite-date-picker-month";
import type { DatePickerMonthHeader } from "../components/calcite-date-picker-month-header";
import type { Dialog } from "../components/calcite-dialog";
import type { Dropdown } from "../components/calcite-dropdown";
import type { DropdownGroup } from "../components/calcite-dropdown-group";
import type { DropdownItem } from "../components/calcite-dropdown-item";
import type { Fab } from "../components/calcite-fab";
import type { Filter } from "../components/calcite-filter";
import type { Flow } from "../components/calcite-flow";
import type { FlowItem } from "../components/calcite-flow-item";
import type { Graph } from "../components/calcite-graph";
import type { Handle } from "../components/calcite-handle";
import type { Icon } from "../components/calcite-icon";
import type { InlineEditable } from "../components/calcite-inline-editable";
import type { Input } from "../components/calcite-input";
import type { InputDatePicker } from "../components/calcite-input-date-picker";
import type { InputMessage } from "../components/calcite-input-message";
import type { InputNumber } from "../components/calcite-input-number";
import type { InputText } from "../components/calcite-input-text";
import type { InputTimePicker } from "../components/calcite-input-time-picker";
import type { InputTimeZone } from "../components/calcite-input-time-zone";
import type { Label } from "../components/calcite-label";
import type { Link } from "../components/calcite-link";
import type { List } from "../components/calcite-list";
import type { ListItem } from "../components/calcite-list-item";
import type { ListItemGroup } from "../components/calcite-list-item-group";
import type { Loader } from "../components/calcite-loader";
import type { Menu } from "../components/calcite-menu";
import type { MenuItem } from "../components/calcite-menu-item";
import type { Meter } from "../components/calcite-meter";
import type { Modal } from "../components/calcite-modal";
import type { Navigation } from "../components/calcite-navigation";
import type { NavigationLogo } from "../components/calcite-navigation-logo";
import type { NavigationUser } from "../components/calcite-navigation-user";
import type { Notice } from "../components/calcite-notice";
import type { Option } from "../components/calcite-option";
import type { OptionGroup } from "../components/calcite-option-group";
import type { Pagination } from "../components/calcite-pagination";
import type { Panel } from "../components/calcite-panel";
import type { Popover } from "../components/calcite-popover";
import type { Progress } from "../components/calcite-progress";
import type { RadioButton } from "../components/calcite-radio-button";
import type { RadioButtonGroup } from "../components/calcite-radio-button-group";
import type { Rating } from "../components/calcite-rating";
import type { Scrim } from "../components/calcite-scrim";
import type { SegmentedControl } from "../components/calcite-segmented-control";
import type { SegmentedControlItem } from "../components/calcite-segmented-control-item";
import type { Select } from "../components/calcite-select";
import type { Sheet } from "../components/calcite-sheet";
import type { Shell } from "../components/calcite-shell";
import type { ShellCenterRow } from "../components/calcite-shell-center-row";
import type { ShellPanel } from "../components/calcite-shell-panel";
import type { Slider } from "../components/calcite-slider";
import type { SortHandle } from "../components/calcite-sort-handle";
import type { SortableList } from "../components/calcite-sortable-list";
import type { SplitButton } from "../components/calcite-split-button";
import type { Stack } from "../components/calcite-stack";
import type { Stepper } from "../components/calcite-stepper";
import type { StepperItem } from "../components/calcite-stepper-item";
import type { Switch } from "../components/calcite-switch";
import type { Tab } from "../components/calcite-tab";
import type { TabNav } from "../components/calcite-tab-nav";
import type { TabTitle } from "../components/calcite-tab-title";
import type { Table } from "../components/calcite-table";
import type { TableCell } from "../components/calcite-table-cell";
import type { TableHeader } from "../components/calcite-table-header";
import type { TableRow } from "../components/calcite-table-row";
import type { Tabs } from "../components/calcite-tabs";
import type { TextArea } from "../components/calcite-text-area";
import type { Tile } from "../components/calcite-tile";
import type { TileGroup } from "../components/calcite-tile-group";
import type { TileSelect } from "../components/calcite-tile-select";
import type { TileSelectGroup } from "../components/calcite-tile-select-group";
import type { TimePicker } from "../components/calcite-time-picker";
import type { Tip } from "../components/calcite-tip";
import type { TipGroup } from "../components/calcite-tip-group";
import type { TipManager } from "../components/calcite-tip-manager";
import type { Tooltip } from "../components/calcite-tooltip";
import type { Tree } from "../components/calcite-tree";
import type { TreeItem } from "../components/calcite-tree-item";
import { JSXBase as StencilJsx } from "@stencil/core/internal";
import type { EventHandler } from "@arcgis/lumina";

interface StencilCalciteAccordion extends Partial<Pick<Accordion, 'appearance' | 'iconPosition' | 'iconType' | 'scale' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteAccordionElement> {
}

interface StencilCalciteAccordionItem extends Partial<Pick<AccordionItem, 'description' | 'expanded' | 'heading' | 'iconEnd' | 'iconFlipRtl' | 'iconStart'>>, StencilJsx.HTMLAttributes<HTMLCalciteAccordionItemElement> {
}

interface StencilCalciteAction extends Required<Pick<Action, 'text'>>, Partial<Pick<Action, 'active' | 'alignment' | 'appearance' | 'compact' | 'disabled' | 'icon' | 'iconFlipRtl' | 'indicator' | 'label' | 'loading' | 'messageOverrides' | 'scale' | 'textEnabled'>>, StencilJsx.HTMLAttributes<HTMLCalciteActionElement> {
}

interface StencilCalciteActionBar extends Partial<Pick<ActionBar, 'actionsEndGroupLabel' | 'expandDisabled' | 'expanded' | 'floating' | 'layout' | 'messageOverrides' | 'overflowActionsDisabled' | 'overlayPositioning' | 'position' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteActionBarElement> {
  onCalciteActionBarToggle?: EventHandler<HTMLCalciteActionBarElement["calciteActionBarToggle"]>;
}

interface StencilCalciteActionGroup extends Partial<Pick<ActionGroup, 'columns' | 'expanded' | 'label' | 'layout' | 'menuFlipPlacements' | 'menuOpen' | 'menuPlacement' | 'messageOverrides' | 'overlayPositioning' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteActionGroupElement> {
}

interface StencilCalciteActionMenu extends Required<Pick<ActionMenu, 'label'>>, Partial<Pick<ActionMenu, 'appearance' | 'expanded' | 'flipPlacements' | 'open' | 'overlayPositioning' | 'placement' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteActionMenuElement> {
  onCalciteActionMenuOpen?: EventHandler<HTMLCalciteActionMenuElement["calciteActionMenuOpen"]>;
}

interface StencilCalciteActionPad extends Partial<Pick<ActionPad, 'actionsEndGroupLabel' | 'expandDisabled' | 'expanded' | 'layout' | 'messageOverrides' | 'overlayPositioning' | 'position' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteActionPadElement> {
  onCalciteActionPadToggle?: EventHandler<HTMLCalciteActionPadElement["calciteActionPadToggle"]>;
}

interface StencilCalciteAlert extends Required<Pick<Alert, 'label'>>, Partial<Pick<Alert, 'autoClose' | 'autoCloseDuration' | 'icon' | 'iconFlipRtl' | 'kind' | 'messageOverrides' | 'numberingSystem' | 'open' | 'placement' | 'queue' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteAlertElement> {
  onCalciteAlertBeforeClose?: EventHandler<HTMLCalciteAlertElement["calciteAlertBeforeClose"]>;
  onCalciteAlertBeforeOpen?: EventHandler<HTMLCalciteAlertElement["calciteAlertBeforeOpen"]>;
  onCalciteAlertClose?: EventHandler<HTMLCalciteAlertElement["calciteAlertClose"]>;
  onCalciteAlertOpen?: EventHandler<HTMLCalciteAlertElement["calciteAlertOpen"]>;
}

interface StencilCalciteAutocomplete extends Partial<Pick<Autocomplete, 'alignment' | 'autocomplete' | 'disabled' | 'flipPlacements' | 'form' | 'icon' | 'iconFlipRtl' | 'inputValue' | 'label' | 'loading' | 'maxLength' | 'messageOverrides' | 'minLength' | 'name' | 'open' | 'overlayPositioning' | 'pattern' | 'placeholder' | 'placement' | 'prefixText' | 'readOnly' | 'required' | 'scale' | 'status' | 'suffixText' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteAutocompleteElement> {
  onCalciteAutocompleteBeforeClose?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteBeforeClose"]>;
  onCalciteAutocompleteBeforeOpen?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteBeforeOpen"]>;
  onCalciteAutocompleteChange?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteChange"]>;
  onCalciteAutocompleteClose?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteClose"]>;
  onCalciteAutocompleteOpen?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteOpen"]>;
  onCalciteAutocompleteTextChange?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteTextChange"]>;
  onCalciteAutocompleteTextInput?: EventHandler<HTMLCalciteAutocompleteElement["calciteAutocompleteTextInput"]>;
}

interface StencilCalciteAutocompleteItem extends Required<Pick<AutocompleteItem, 'heading'>>, Partial<Pick<AutocompleteItem, 'description' | 'disabled' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'label' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteAutocompleteItemElement> {
}

interface StencilCalciteAutocompleteItemGroup extends Required<Pick<AutocompleteItemGroup, 'heading'>>, Partial<Pick<AutocompleteItemGroup, 'label'>>, StencilJsx.HTMLAttributes<HTMLCalciteAutocompleteItemGroupElement> {
}

interface StencilCalciteAvatar extends Partial<Pick<Avatar, 'fullName' | 'label' | 'scale' | 'thumbnail' | 'userId' | 'username'>>, StencilJsx.HTMLAttributes<HTMLCalciteAvatarElement> {
}

interface StencilCalciteBlock extends Partial<Pick<Block, 'collapsible' | 'description' | 'disabled' | 'dragDisabled' | 'dragHandle' | 'expanded' | 'heading' | 'headingLevel' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'label' | 'loading' | 'menuFlipPlacements' | 'menuPlacement' | 'messageOverrides' | 'open' | 'overlayPositioning' | 'sortHandleOpen' | 'status'>>, StencilJsx.HTMLAttributes<HTMLCalciteBlockElement> {
  onCalciteBlockBeforeClose?: EventHandler<HTMLCalciteBlockElement["calciteBlockBeforeClose"]>;
  onCalciteBlockBeforeOpen?: EventHandler<HTMLCalciteBlockElement["calciteBlockBeforeOpen"]>;
  onCalciteBlockClose?: EventHandler<HTMLCalciteBlockElement["calciteBlockClose"]>;
  onCalciteBlockOpen?: EventHandler<HTMLCalciteBlockElement["calciteBlockOpen"]>;
  onCalciteBlockSortHandleBeforeClose?: EventHandler<HTMLCalciteBlockElement["calciteBlockSortHandleBeforeClose"]>;
  onCalciteBlockSortHandleBeforeOpen?: EventHandler<HTMLCalciteBlockElement["calciteBlockSortHandleBeforeOpen"]>;
  onCalciteBlockSortHandleClose?: EventHandler<HTMLCalciteBlockElement["calciteBlockSortHandleClose"]>;
  onCalciteBlockSortHandleOpen?: EventHandler<HTMLCalciteBlockElement["calciteBlockSortHandleOpen"]>;
  onCalciteBlockToggle?: EventHandler<HTMLCalciteBlockElement["calciteBlockToggle"]>;
}

interface StencilCalciteBlockGroup extends Required<Pick<BlockGroup, 'label'>>, Partial<Pick<BlockGroup, 'canPull' | 'canPut' | 'disabled' | 'dragEnabled' | 'group' | 'loading'>>, StencilJsx.HTMLAttributes<HTMLCalciteBlockGroupElement> {
  onCalciteBlockGroupDragEnd?: EventHandler<HTMLCalciteBlockGroupElement["calciteBlockGroupDragEnd"]>;
  onCalciteBlockGroupDragStart?: EventHandler<HTMLCalciteBlockGroupElement["calciteBlockGroupDragStart"]>;
  onCalciteBlockGroupMoveHalt?: EventHandler<HTMLCalciteBlockGroupElement["calciteBlockGroupMoveHalt"]>;
  onCalciteBlockGroupOrderChange?: EventHandler<HTMLCalciteBlockGroupElement["calciteBlockGroupOrderChange"]>;
}

interface StencilCalciteBlockSection extends Partial<Pick<BlockSection, 'expanded' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'messageOverrides' | 'open' | 'status' | 'text' | 'toggleDisplay'>>, StencilJsx.HTMLAttributes<HTMLCalciteBlockSectionElement> {
  onCalciteBlockSectionToggle?: EventHandler<HTMLCalciteBlockSectionElement["calciteBlockSectionToggle"]>;
}

interface StencilCalciteButton extends Partial<Pick<Button, 'alignment' | 'appearance' | 'disabled' | 'download' | 'form' | 'href' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'kind' | 'label' | 'loading' | 'messageOverrides' | 'name' | 'rel' | 'round' | 'scale' | 'splitChild' | 'target' | 'type' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteButtonElement> {
}

interface StencilCalciteCard extends Partial<Pick<Card, 'disabled' | 'label' | 'loading' | 'messageOverrides' | 'selectable' | 'selected' | 'thumbnailPosition'>>, StencilJsx.HTMLAttributes<HTMLCalciteCardElement> {
  onCalciteCardSelect?: EventHandler<HTMLCalciteCardElement["calciteCardSelect"]>;
}

interface StencilCalciteCardGroup extends Required<Pick<CardGroup, 'label'>>, Partial<Pick<CardGroup, 'disabled' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteCardGroupElement> {
  onCalciteCardGroupSelect?: EventHandler<HTMLCalciteCardGroupElement["calciteCardGroupSelect"]>;
}

interface StencilCalciteCarousel extends Required<Pick<Carousel, 'label'>>, Partial<Pick<Carousel, 'arrowType' | 'autoplay' | 'autoplayDuration' | 'controlOverlay' | 'disabled' | 'messageOverrides'>>, StencilJsx.HTMLAttributes<HTMLCalciteCarouselElement> {
  onCalciteCarouselChange?: EventHandler<HTMLCalciteCarouselElement["calciteCarouselChange"]>;
  onCalciteCarouselPause?: EventHandler<HTMLCalciteCarouselElement["calciteCarouselPause"]>;
  onCalciteCarouselPlay?: EventHandler<HTMLCalciteCarouselElement["calciteCarouselPlay"]>;
  onCalciteCarouselResume?: EventHandler<HTMLCalciteCarouselElement["calciteCarouselResume"]>;
  onCalciteCarouselStop?: EventHandler<HTMLCalciteCarouselElement["calciteCarouselStop"]>;
}

interface StencilCalciteCarouselItem extends Required<Pick<CarouselItem, 'label'>>, Partial<Pick<CarouselItem, 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteCarouselItemElement> {
}

interface StencilCalciteCheckbox extends Partial<Pick<Checkbox, 'checked' | 'disabled' | 'form' | 'indeterminate' | 'label' | 'name' | 'required' | 'scale' | 'status' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteCheckboxElement> {
  onCalciteCheckboxChange?: EventHandler<HTMLCalciteCheckboxElement["calciteCheckboxChange"]>;
}

interface StencilCalciteChip extends Required<Pick<Chip, 'label'>>, Partial<Pick<Chip, 'appearance' | 'closable' | 'closed' | 'closeOnDelete' | 'disabled' | 'icon' | 'iconFlipRtl' | 'kind' | 'messageOverrides' | 'scale' | 'selected' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteChipElement> {
  onCalciteChipClose?: EventHandler<HTMLCalciteChipElement["calciteChipClose"]>;
  onCalciteChipSelect?: EventHandler<HTMLCalciteChipElement["calciteChipSelect"]>;
}

interface StencilCalciteChipGroup extends Required<Pick<ChipGroup, 'label'>>, Partial<Pick<ChipGroup, 'disabled' | 'scale' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteChipGroupElement> {
  onCalciteChipGroupSelect?: EventHandler<HTMLCalciteChipGroupElement["calciteChipGroupSelect"]>;
}

interface StencilCalciteColorPicker extends Partial<Pick<ColorPicker, 'allowEmpty' | 'alphaChannel' | 'channelsDisabled' | 'clearable' | 'disabled' | 'format' | 'hexDisabled' | 'messageOverrides' | 'numberingSystem' | 'savedDisabled' | 'scale' | 'storageId' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteColorPickerElement> {
  onCalciteColorPickerChange?: EventHandler<HTMLCalciteColorPickerElement["calciteColorPickerChange"]>;
  onCalciteColorPickerInput?: EventHandler<HTMLCalciteColorPickerElement["calciteColorPickerInput"]>;
}

interface StencilCalciteColorPickerHexInput extends Partial<Pick<ColorPickerHexInput, 'allowEmpty' | 'alphaChannel' | 'hexLabel' | 'numberingSystem' | 'scale' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteColorPickerHexInputElement> {
  onCalciteColorPickerHexInputChange?: EventHandler<HTMLCalciteColorPickerHexInputElement["calciteColorPickerHexInputChange"]>;
}

interface StencilCalciteColorPickerSwatch extends Partial<Pick<ColorPickerSwatch, 'active' | 'color' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteColorPickerSwatchElement> {
}

interface StencilCalciteCombobox extends Required<Pick<Combobox, 'label'>>, Partial<Pick<Combobox, 'allowCustomValues' | 'clearDisabled' | 'disabled' | 'filterProps' | 'filterText' | 'flipPlacements' | 'form' | 'maxItems' | 'messageOverrides' | 'name' | 'open' | 'overlayPositioning' | 'placeholder' | 'placeholderIcon' | 'placeholderIconFlipRtl' | 'readOnly' | 'required' | 'scale' | 'selectAllEnabled' | 'selectionDisplay' | 'selectionMode' | 'status' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteComboboxElement> {
  onCalciteComboboxBeforeClose?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxBeforeClose"]>;
  onCalciteComboboxBeforeOpen?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxBeforeOpen"]>;
  onCalciteComboboxChange?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxChange"]>;
  onCalciteComboboxChipClose?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxChipClose"]>;
  onCalciteComboboxClose?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxClose"]>;
  onCalciteComboboxFilterChange?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxFilterChange"]>;
  onCalciteComboboxOpen?: EventHandler<HTMLCalciteComboboxElement["calciteComboboxOpen"]>;
}

interface StencilCalciteComboboxItem extends Required<Pick<ComboboxItem, 'value'>>, Partial<Pick<ComboboxItem, 'active' | 'ancestors' | 'description' | 'disabled' | 'filterDisabled' | 'guid' | 'heading' | 'icon' | 'iconFlipRtl' | 'label' | 'metadata' | 'selected' | 'shortHeading' | 'textLabel'>>, StencilJsx.HTMLAttributes<HTMLCalciteComboboxItemElement> {
  onCalciteComboboxItemChange?: EventHandler<HTMLCalciteComboboxItemElement["calciteComboboxItemChange"]>;
}

interface StencilCalciteComboboxItemGroup extends Required<Pick<ComboboxItemGroup, 'label'>>, Partial<Pick<ComboboxItemGroup, 'ancestors'>>, StencilJsx.HTMLAttributes<HTMLCalciteComboboxItemGroupElement> {
}

interface StencilCalciteDatePicker extends Partial<Pick<DatePicker, 'activeDate' | 'activeRange' | 'headingLevel' | 'layout' | 'max' | 'maxAsDate' | 'messageOverrides' | 'min' | 'minAsDate' | 'monthStyle' | 'numberingSystem' | 'proximitySelectionDisabled' | 'range' | 'scale' | 'value' | 'valueAsDate'>>, StencilJsx.HTMLAttributes<HTMLCalciteDatePickerElement> {
  onCalciteDatePickerChange?: EventHandler<HTMLCalciteDatePickerElement["calciteDatePickerChange"]>;
  onCalciteDatePickerRangeChange?: EventHandler<HTMLCalciteDatePickerElement["calciteDatePickerRangeChange"]>;
}

interface StencilCalciteDatePickerDay extends Required<Pick<DatePickerDay, 'day'>>, Partial<Pick<DatePickerDay, 'active' | 'currentMonth' | 'disabled' | 'endOfRange' | 'highlighted' | 'range' | 'rangeHover' | 'scale' | 'selected' | 'startOfRange' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteDatePickerDayElement> {
}

interface StencilCalciteDatePickerMonth extends Partial<Pick<DatePickerMonth, 'activeDate' | 'endDate' | 'headingLevel' | 'hoverRange' | 'max' | 'min' | 'monthStyle' | 'range' | 'scale' | 'selectedDate' | 'startDate'>>, StencilJsx.HTMLAttributes<HTMLCalciteDatePickerMonthElement> {
}

interface StencilCalciteDatePickerMonthHeader extends Partial<Pick<DatePickerMonthHeader, 'activeDate' | 'headingLevel' | 'localeData' | 'max' | 'min' | 'monthStyle' | 'scale' | 'selectedDate'>>, StencilJsx.HTMLAttributes<HTMLCalciteDatePickerMonthHeaderElement> {
}

interface StencilCalciteDialog extends Partial<Pick<Dialog, 'beforeClose' | 'closeDisabled' | 'description' | 'dragEnabled' | 'escapeDisabled' | 'focusTrapDisabled' | 'focusTrapOptions' | 'heading' | 'headingLevel' | 'kind' | 'loading' | 'menuOpen' | 'messageOverrides' | 'modal' | 'open' | 'outsideCloseDisabled' | 'overlayPositioning' | 'placement' | 'resizable' | 'scale' | 'width' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteDialogElement> {
  onCalciteDialogBeforeClose?: EventHandler<HTMLCalciteDialogElement["calciteDialogBeforeClose"]>;
  onCalciteDialogBeforeOpen?: EventHandler<HTMLCalciteDialogElement["calciteDialogBeforeOpen"]>;
  onCalciteDialogClose?: EventHandler<HTMLCalciteDialogElement["calciteDialogClose"]>;
  onCalciteDialogOpen?: EventHandler<HTMLCalciteDialogElement["calciteDialogOpen"]>;
  onCalciteDialogScroll?: EventHandler<HTMLCalciteDialogElement["calciteDialogScroll"]>;
}

interface StencilCalciteDropdown extends Partial<Pick<Dropdown, 'closeOnSelectDisabled' | 'disabled' | 'flipPlacements' | 'maxItems' | 'offsetDistance' | 'offsetSkidding' | 'open' | 'overlayPositioning' | 'placement' | 'scale' | 'type' | 'width' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteDropdownElement> {
  onCalciteDropdownBeforeClose?: EventHandler<HTMLCalciteDropdownElement["calciteDropdownBeforeClose"]>;
  onCalciteDropdownBeforeOpen?: EventHandler<HTMLCalciteDropdownElement["calciteDropdownBeforeOpen"]>;
  onCalciteDropdownClose?: EventHandler<HTMLCalciteDropdownElement["calciteDropdownClose"]>;
  onCalciteDropdownOpen?: EventHandler<HTMLCalciteDropdownElement["calciteDropdownOpen"]>;
  onCalciteDropdownSelect?: EventHandler<HTMLCalciteDropdownElement["calciteDropdownSelect"]>;
}

interface StencilCalciteDropdownGroup extends Partial<Pick<DropdownGroup, 'groupTitle' | 'position' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteDropdownGroupElement> {
}

interface StencilCalciteDropdownItem extends Partial<Pick<DropdownItem, 'disabled' | 'href' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'label' | 'rel' | 'selected' | 'target'>>, StencilJsx.HTMLAttributes<HTMLCalciteDropdownItemElement> {
  onCalciteDropdownItemSelect?: EventHandler<HTMLCalciteDropdownItemElement["calciteDropdownItemSelect"]>;
}

interface StencilCalciteFab extends Partial<Pick<Fab, 'appearance' | 'disabled' | 'icon' | 'iconFlipRtl' | 'kind' | 'label' | 'loading' | 'scale' | 'text' | 'textEnabled'>>, StencilJsx.HTMLAttributes<HTMLCalciteFabElement> {
}

interface StencilCalciteFilter extends Partial<Pick<Filter, 'disabled' | 'filterProps' | 'items' | 'label' | 'messageOverrides' | 'placeholder' | 'scale' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteFilterElement> {
  onCalciteFilterChange?: EventHandler<HTMLCalciteFilterElement["calciteFilterChange"]>;
}

interface StencilCalciteFlow extends StencilJsx.HTMLAttributes<HTMLCalciteFlowElement> {
}

interface StencilCalciteFlowItem extends Partial<Pick<FlowItem, 'beforeBack' | 'beforeClose' | 'closable' | 'closed' | 'collapsed' | 'collapsible' | 'description' | 'disabled' | 'heading' | 'headingLevel' | 'loading' | 'menuOpen' | 'messageOverrides' | 'overlayPositioning' | 'scale' | 'selected' | 'showBackButton'>>, StencilJsx.HTMLAttributes<HTMLCalciteFlowItemElement> {
  onCalciteFlowItemBack?: EventHandler<HTMLCalciteFlowItemElement["calciteFlowItemBack"]>;
  onCalciteFlowItemClose?: EventHandler<HTMLCalciteFlowItemElement["calciteFlowItemClose"]>;
  onCalciteFlowItemScroll?: EventHandler<HTMLCalciteFlowItemElement["calciteFlowItemScroll"]>;
  onCalciteFlowItemToggle?: EventHandler<HTMLCalciteFlowItemElement["calciteFlowItemToggle"]>;
}

interface StencilCalciteGraph extends Required<Pick<Graph, 'max' | 'min'>>, Partial<Pick<Graph, 'colorStops' | 'data' | 'highlightMax' | 'highlightMin'>>, StencilJsx.HTMLAttributes<HTMLCalciteGraphElement> {
}

interface StencilCalciteHandle extends Partial<Pick<Handle, 'disabled' | 'dragHandle' | 'messageOverrides' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteHandleElement> {
  onCalciteHandleChange?: EventHandler<HTMLCalciteHandleElement["calciteHandleChange"]>;
  onCalciteHandleNudge?: EventHandler<HTMLCalciteHandleElement["calciteHandleNudge"]>;
}

interface StencilCalciteIcon extends Partial<Pick<Icon, 'flipRtl' | 'icon' | 'preload' | 'scale' | 'textLabel'>>, StencilJsx.HTMLAttributes<HTMLCalciteIconElement> {
}

interface StencilCalciteInlineEditable extends Partial<Pick<InlineEditable, 'afterConfirm' | 'controls' | 'disabled' | 'editingEnabled' | 'loading' | 'messageOverrides' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteInlineEditableElement> {
  onCalciteInlineEditableEditCancel?: EventHandler<HTMLCalciteInlineEditableElement["calciteInlineEditableEditCancel"]>;
  onCalciteInlineEditableEditConfirm?: EventHandler<HTMLCalciteInlineEditableElement["calciteInlineEditableEditConfirm"]>;
}

interface StencilCalciteInput extends Partial<Pick<Input, 'accept' | 'alignment' | 'autocomplete' | 'clearable' | 'disabled' | 'files' | 'form' | 'groupSeparator' | 'icon' | 'iconFlipRtl' | 'label' | 'loading' | 'max' | 'maxLength' | 'messageOverrides' | 'min' | 'minLength' | 'multiple' | 'name' | 'numberButtonType' | 'numberingSystem' | 'pattern' | 'placeholder' | 'prefixText' | 'readOnly' | 'required' | 'scale' | 'status' | 'step' | 'suffixText' | 'type' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputElement> {
  onCalciteInputChange?: EventHandler<HTMLCalciteInputElement["calciteInputChange"]>;
  onCalciteInputInput?: EventHandler<HTMLCalciteInputElement["calciteInputInput"]>;
}

interface StencilCalciteInputDatePicker extends Partial<Pick<InputDatePicker, 'disabled' | 'flipPlacements' | 'focusTrapDisabled' | 'form' | 'headingLevel' | 'label' | 'layout' | 'max' | 'maxAsDate' | 'messageOverrides' | 'min' | 'minAsDate' | 'monthStyle' | 'name' | 'numberingSystem' | 'open' | 'overlayPositioning' | 'placement' | 'proximitySelectionDisabled' | 'range' | 'readOnly' | 'required' | 'scale' | 'status' | 'validationIcon' | 'validationMessage' | 'value' | 'valueAsDate'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputDatePickerElement> {
  onCalciteInputDatePickerBeforeClose?: EventHandler<HTMLCalciteInputDatePickerElement["calciteInputDatePickerBeforeClose"]>;
  onCalciteInputDatePickerBeforeOpen?: EventHandler<HTMLCalciteInputDatePickerElement["calciteInputDatePickerBeforeOpen"]>;
  onCalciteInputDatePickerChange?: EventHandler<HTMLCalciteInputDatePickerElement["calciteInputDatePickerChange"]>;
  onCalciteInputDatePickerClose?: EventHandler<HTMLCalciteInputDatePickerElement["calciteInputDatePickerClose"]>;
  onCalciteInputDatePickerOpen?: EventHandler<HTMLCalciteInputDatePickerElement["calciteInputDatePickerOpen"]>;
}

interface StencilCalciteInputMessage extends Partial<Pick<InputMessage, 'icon' | 'iconFlipRtl' | 'scale' | 'status'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputMessageElement> {
}

interface StencilCalciteInputNumber extends Partial<Pick<InputNumber, 'alignment' | 'autocomplete' | 'clearable' | 'disabled' | 'form' | 'groupSeparator' | 'icon' | 'iconFlipRtl' | 'integer' | 'label' | 'loading' | 'max' | 'maxLength' | 'messageOverrides' | 'min' | 'minLength' | 'name' | 'numberButtonType' | 'numberingSystem' | 'placeholder' | 'prefixText' | 'readOnly' | 'required' | 'scale' | 'status' | 'step' | 'suffixText' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputNumberElement> {
  onCalciteInputNumberChange?: EventHandler<HTMLCalciteInputNumberElement["calciteInputNumberChange"]>;
  onCalciteInputNumberInput?: EventHandler<HTMLCalciteInputNumberElement["calciteInputNumberInput"]>;
}

interface StencilCalciteInputText extends Partial<Pick<InputText, 'alignment' | 'autocomplete' | 'clearable' | 'disabled' | 'form' | 'icon' | 'iconFlipRtl' | 'label' | 'loading' | 'maxLength' | 'messageOverrides' | 'minLength' | 'name' | 'pattern' | 'placeholder' | 'prefixText' | 'readOnly' | 'required' | 'scale' | 'status' | 'suffixText' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputTextElement> {
  onCalciteInputTextChange?: EventHandler<HTMLCalciteInputTextElement["calciteInputTextChange"]>;
  onCalciteInputTextInput?: EventHandler<HTMLCalciteInputTextElement["calciteInputTextInput"]>;
}

interface StencilCalciteInputTimePicker extends Partial<Pick<InputTimePicker, 'disabled' | 'focusTrapDisabled' | 'form' | 'hourFormat' | 'max' | 'messageOverrides' | 'min' | 'name' | 'numberingSystem' | 'open' | 'overlayPositioning' | 'placement' | 'readOnly' | 'required' | 'scale' | 'status' | 'step' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputTimePickerElement> {
  onCalciteInputTimePickerBeforeClose?: EventHandler<HTMLCalciteInputTimePickerElement["calciteInputTimePickerBeforeClose"]>;
  onCalciteInputTimePickerBeforeOpen?: EventHandler<HTMLCalciteInputTimePickerElement["calciteInputTimePickerBeforeOpen"]>;
  onCalciteInputTimePickerChange?: EventHandler<HTMLCalciteInputTimePickerElement["calciteInputTimePickerChange"]>;
  onCalciteInputTimePickerClose?: EventHandler<HTMLCalciteInputTimePickerElement["calciteInputTimePickerClose"]>;
  onCalciteInputTimePickerOpen?: EventHandler<HTMLCalciteInputTimePickerElement["calciteInputTimePickerOpen"]>;
}

interface StencilCalciteInputTimeZone extends Partial<Pick<InputTimeZone, 'clearable' | 'disabled' | 'form' | 'maxItems' | 'messageOverrides' | 'mode' | 'name' | 'offsetStyle' | 'open' | 'overlayPositioning' | 'readOnly' | 'referenceDate' | 'scale' | 'status' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteInputTimeZoneElement> {
  onCalciteInputTimeZoneBeforeClose?: EventHandler<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneBeforeClose"]>;
  onCalciteInputTimeZoneBeforeOpen?: EventHandler<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneBeforeOpen"]>;
  onCalciteInputTimeZoneChange?: EventHandler<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneChange"]>;
  onCalciteInputTimeZoneClose?: EventHandler<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneClose"]>;
  onCalciteInputTimeZoneOpen?: EventHandler<HTMLCalciteInputTimeZoneElement["calciteInputTimeZoneOpen"]>;
}

interface StencilCalciteLabel extends Partial<Pick<Label, 'alignment' | 'for' | 'layout' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteLabelElement> {
}

interface StencilCalciteLink extends Partial<Pick<Link, 'disabled' | 'download' | 'href' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'rel' | 'target'>>, StencilJsx.HTMLAttributes<HTMLCalciteLinkElement> {
}

interface StencilCalciteList extends Required<Pick<List, 'label'>>, Partial<Pick<List, 'canPull' | 'canPut' | 'disabled' | 'displayMode' | 'dragEnabled' | 'filterEnabled' | 'filterLabel' | 'filterPlaceholder' | 'filterPredicate' | 'filterProps' | 'filterText' | 'group' | 'interactionMode' | 'loading' | 'messageOverrides' | 'numberingSystem' | 'scale' | 'selectionAppearance' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteListElement> {
  onCalciteListChange?: EventHandler<HTMLCalciteListElement["calciteListChange"]>;
  onCalciteListDragEnd?: EventHandler<HTMLCalciteListElement["calciteListDragEnd"]>;
  onCalciteListDragStart?: EventHandler<HTMLCalciteListElement["calciteListDragStart"]>;
  onCalciteListFilter?: EventHandler<HTMLCalciteListElement["calciteListFilter"]>;
  onCalciteListMoveHalt?: EventHandler<HTMLCalciteListElement["calciteListMoveHalt"]>;
  onCalciteListOrderChange?: EventHandler<HTMLCalciteListElement["calciteListOrderChange"]>;
}

interface StencilCalciteListItem extends Partial<Pick<ListItem, 'closable' | 'closed' | 'description' | 'disabled' | 'dragDisabled' | 'expanded' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'label' | 'messageOverrides' | 'metadata' | 'open' | 'scale' | 'selected' | 'sortHandleOpen' | 'unavailable' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteListItemElement> {
  onCalciteListItemClose?: EventHandler<HTMLCalciteListItemElement["calciteListItemClose"]>;
  onCalciteListItemSelect?: EventHandler<HTMLCalciteListItemElement["calciteListItemSelect"]>;
  onCalciteListItemSortHandleBeforeClose?: EventHandler<HTMLCalciteListItemElement["calciteListItemSortHandleBeforeClose"]>;
  onCalciteListItemSortHandleBeforeOpen?: EventHandler<HTMLCalciteListItemElement["calciteListItemSortHandleBeforeOpen"]>;
  onCalciteListItemSortHandleClose?: EventHandler<HTMLCalciteListItemElement["calciteListItemSortHandleClose"]>;
  onCalciteListItemSortHandleOpen?: EventHandler<HTMLCalciteListItemElement["calciteListItemSortHandleOpen"]>;
  onCalciteListItemToggle?: EventHandler<HTMLCalciteListItemElement["calciteListItemToggle"]>;
}

interface StencilCalciteListItemGroup extends Partial<Pick<ListItemGroup, 'disabled' | 'heading' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteListItemGroupElement> {
}

interface StencilCalciteLoader extends Required<Pick<Loader, 'label'>>, Partial<Pick<Loader, 'inline' | 'scale' | 'text' | 'type' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteLoaderElement> {
}

interface StencilCalciteMenu extends Required<Pick<Menu, 'label'>>, Partial<Pick<Menu, 'layout' | 'messageOverrides'>>, StencilJsx.HTMLAttributes<HTMLCalciteMenuElement> {
}

interface StencilCalciteMenuItem extends Required<Pick<MenuItem, 'label'>>, Partial<Pick<MenuItem, 'active' | 'breadcrumb' | 'href' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'messageOverrides' | 'open' | 'rel' | 'target' | 'text'>>, StencilJsx.HTMLAttributes<HTMLCalciteMenuItemElement> {
  onCalciteMenuItemSelect?: EventHandler<HTMLCalciteMenuItemElement["calciteMenuItemSelect"]>;
}

interface StencilCalciteMeter extends Required<Pick<Meter, 'label'>>, Partial<Pick<Meter, 'appearance' | 'disabled' | 'fillType' | 'form' | 'groupSeparator' | 'high' | 'low' | 'max' | 'min' | 'name' | 'numberingSystem' | 'rangeLabels' | 'rangeLabelType' | 'scale' | 'unitLabel' | 'value' | 'valueLabel' | 'valueLabelType'>>, StencilJsx.HTMLAttributes<HTMLCalciteMeterElement> {
}

interface StencilCalciteModal extends Partial<Pick<Modal, 'beforeClose' | 'closeButtonDisabled' | 'docked' | 'escapeDisabled' | 'focusTrapDisabled' | 'focusTrapOptions' | 'fullscreen' | 'kind' | 'messageOverrides' | 'open' | 'outsideCloseDisabled' | 'scale' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteModalElement> {
  onCalciteModalBeforeClose?: EventHandler<HTMLCalciteModalElement["calciteModalBeforeClose"]>;
  onCalciteModalBeforeOpen?: EventHandler<HTMLCalciteModalElement["calciteModalBeforeOpen"]>;
  onCalciteModalClose?: EventHandler<HTMLCalciteModalElement["calciteModalClose"]>;
  onCalciteModalOpen?: EventHandler<HTMLCalciteModalElement["calciteModalOpen"]>;
}

interface StencilCalciteNavigation extends Partial<Pick<Navigation, 'label' | 'navigationAction'>>, StencilJsx.HTMLAttributes<HTMLCalciteNavigationElement> {
  onCalciteNavigationActionSelect?: EventHandler<HTMLCalciteNavigationElement["calciteNavigationActionSelect"]>;
}

interface StencilCalciteNavigationLogo extends Partial<Pick<NavigationLogo, 'active' | 'description' | 'heading' | 'headingLevel' | 'href' | 'icon' | 'iconFlipRtl' | 'label' | 'rel' | 'target' | 'thumbnail'>>, StencilJsx.HTMLAttributes<HTMLCalciteNavigationLogoElement> {
}

interface StencilCalciteNavigationUser extends Partial<Pick<NavigationUser, 'active' | 'fullName' | 'label' | 'textDisabled' | 'thumbnail' | 'userId' | 'username'>>, StencilJsx.HTMLAttributes<HTMLCalciteNavigationUserElement> {
}

interface StencilCalciteNotice extends Partial<Pick<Notice, 'closable' | 'icon' | 'iconFlipRtl' | 'kind' | 'messageOverrides' | 'open' | 'scale' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteNoticeElement> {
  onCalciteNoticeBeforeClose?: EventHandler<HTMLCalciteNoticeElement["calciteNoticeBeforeClose"]>;
  onCalciteNoticeBeforeOpen?: EventHandler<HTMLCalciteNoticeElement["calciteNoticeBeforeOpen"]>;
  onCalciteNoticeClose?: EventHandler<HTMLCalciteNoticeElement["calciteNoticeClose"]>;
  onCalciteNoticeOpen?: EventHandler<HTMLCalciteNoticeElement["calciteNoticeOpen"]>;
}

interface StencilCalciteOption extends Partial<Pick<Option, 'disabled' | 'label' | 'selected' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteOptionElement> {
}

interface StencilCalciteOptionGroup extends Required<Pick<OptionGroup, 'label'>>, Partial<Pick<OptionGroup, 'disabled'>>, StencilJsx.HTMLAttributes<HTMLCalciteOptionGroupElement> {
}

interface StencilCalcitePagination extends Partial<Pick<Pagination, 'groupSeparator' | 'messageOverrides' | 'numberingSystem' | 'pageSize' | 'scale' | 'startItem' | 'totalItems'>>, StencilJsx.HTMLAttributes<HTMLCalcitePaginationElement> {
  onCalcitePaginationChange?: EventHandler<HTMLCalcitePaginationElement["calcitePaginationChange"]>;
}

interface StencilCalcitePanel extends Partial<Pick<Panel, 'beforeClose' | 'closable' | 'closed' | 'collapsed' | 'collapsible' | 'description' | 'disabled' | 'heading' | 'headingLevel' | 'loading' | 'menuFlipPlacements' | 'menuOpen' | 'menuPlacement' | 'messageOverrides' | 'overlayPositioning' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalcitePanelElement> {
  onCalcitePanelClose?: EventHandler<HTMLCalcitePanelElement["calcitePanelClose"]>;
  onCalcitePanelScroll?: EventHandler<HTMLCalcitePanelElement["calcitePanelScroll"]>;
  onCalcitePanelToggle?: EventHandler<HTMLCalcitePanelElement["calcitePanelToggle"]>;
}

interface StencilCalcitePopover extends Required<Pick<Popover, 'label' | 'referenceElement'>>, Partial<Pick<Popover, 'autoClose' | 'closable' | 'flipDisabled' | 'flipPlacements' | 'focusTrapDisabled' | 'focusTrapOptions' | 'heading' | 'headingLevel' | 'messageOverrides' | 'offsetDistance' | 'offsetSkidding' | 'open' | 'overlayPositioning' | 'placement' | 'pointerDisabled' | 'scale' | 'triggerDisabled'>>, StencilJsx.HTMLAttributes<HTMLCalcitePopoverElement> {
  onCalcitePopoverBeforeClose?: EventHandler<HTMLCalcitePopoverElement["calcitePopoverBeforeClose"]>;
  onCalcitePopoverBeforeOpen?: EventHandler<HTMLCalcitePopoverElement["calcitePopoverBeforeOpen"]>;
  onCalcitePopoverClose?: EventHandler<HTMLCalcitePopoverElement["calcitePopoverClose"]>;
  onCalcitePopoverOpen?: EventHandler<HTMLCalcitePopoverElement["calcitePopoverOpen"]>;
}

interface StencilCalciteProgress extends Partial<Pick<Progress, 'label' | 'reversed' | 'text' | 'type' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteProgressElement> {
}

interface StencilCalciteRadioButton extends Required<Pick<RadioButton, 'value'>>, Partial<Pick<RadioButton, 'checked' | 'disabled' | 'form' | 'name' | 'required' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteRadioButtonElement> {
  onCalciteRadioButtonChange?: EventHandler<HTMLCalciteRadioButtonElement["calciteRadioButtonChange"]>;
}

interface StencilCalciteRadioButtonGroup extends Required<Pick<RadioButtonGroup, 'name'>>, Partial<Pick<RadioButtonGroup, 'disabled' | 'layout' | 'required' | 'scale' | 'status' | 'validationIcon' | 'validationMessage'>>, StencilJsx.HTMLAttributes<HTMLCalciteRadioButtonGroupElement> {
  onCalciteRadioButtonGroupChange?: EventHandler<HTMLCalciteRadioButtonGroupElement["calciteRadioButtonGroupChange"]>;
}

interface StencilCalciteRating extends Partial<Pick<Rating, 'average' | 'count' | 'disabled' | 'form' | 'messageOverrides' | 'name' | 'readOnly' | 'scale' | 'showChip' | 'status' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteRatingElement> {
  onCalciteRatingChange?: EventHandler<HTMLCalciteRatingElement["calciteRatingChange"]>;
}

interface StencilCalciteScrim extends Partial<Pick<Scrim, 'loading' | 'messageOverrides'>>, StencilJsx.HTMLAttributes<HTMLCalciteScrimElement> {
}

interface StencilCalciteSegmentedControl extends Partial<Pick<SegmentedControl, 'appearance' | 'disabled' | 'form' | 'layout' | 'name' | 'required' | 'scale' | 'status' | 'validationIcon' | 'validationMessage' | 'value' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteSegmentedControlElement> {
  onCalciteSegmentedControlChange?: EventHandler<HTMLCalciteSegmentedControlElement["calciteSegmentedControlChange"]>;
}

interface StencilCalciteSegmentedControlItem extends Partial<Pick<SegmentedControlItem, 'checked' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteSegmentedControlItemElement> {
}

interface StencilCalciteSelect extends Required<Pick<Select, 'label'>>, Partial<Pick<Select, 'disabled' | 'form' | 'name' | 'required' | 'scale' | 'status' | 'validationIcon' | 'validationMessage' | 'value' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteSelectElement> {
  onCalciteSelectChange?: EventHandler<HTMLCalciteSelectElement["calciteSelectChange"]>;
}

interface StencilCalciteSheet extends Required<Pick<Sheet, 'label'>>, Partial<Pick<Sheet, 'beforeClose' | 'displayMode' | 'escapeDisabled' | 'focusTrapDisabled' | 'focusTrapOptions' | 'height' | 'heightScale' | 'messageOverrides' | 'open' | 'outsideCloseDisabled' | 'position' | 'resizable' | 'width' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteSheetElement> {
  onCalciteSheetBeforeClose?: EventHandler<HTMLCalciteSheetElement["calciteSheetBeforeClose"]>;
  onCalciteSheetBeforeOpen?: EventHandler<HTMLCalciteSheetElement["calciteSheetBeforeOpen"]>;
  onCalciteSheetClose?: EventHandler<HTMLCalciteSheetElement["calciteSheetClose"]>;
  onCalciteSheetOpen?: EventHandler<HTMLCalciteSheetElement["calciteSheetOpen"]>;
}

interface StencilCalciteShell extends Partial<Pick<Shell, 'contentBehind'>>, StencilJsx.HTMLAttributes<HTMLCalciteShellElement> {
}

interface StencilCalciteShellCenterRow extends Partial<Pick<ShellCenterRow, 'detached' | 'heightScale' | 'position'>>, StencilJsx.HTMLAttributes<HTMLCalciteShellCenterRowElement> {
}

interface StencilCalciteShellPanel extends Partial<Pick<ShellPanel, 'collapsed' | 'displayMode' | 'height' | 'heightScale' | 'layout' | 'messageOverrides' | 'position' | 'resizable' | 'width' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteShellPanelElement> {
}

interface StencilCalciteSlider extends Partial<Pick<Slider, 'disabled' | 'fillPlacement' | 'form' | 'groupSeparator' | 'hasHistogram' | 'histogram' | 'histogramStops' | 'labelFormatter' | 'labelHandles' | 'labelTicks' | 'max' | 'maxLabel' | 'maxValue' | 'min' | 'minLabel' | 'minValue' | 'mirrored' | 'name' | 'numberingSystem' | 'pageStep' | 'precise' | 'required' | 'scale' | 'snap' | 'status' | 'step' | 'ticks' | 'validationIcon' | 'validationMessage' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteSliderElement> {
  onCalciteSliderChange?: EventHandler<HTMLCalciteSliderElement["calciteSliderChange"]>;
  onCalciteSliderInput?: EventHandler<HTMLCalciteSliderElement["calciteSliderInput"]>;
}

interface StencilCalciteSortHandle extends Partial<Pick<SortHandle, 'disabled' | 'flipPlacements' | 'label' | 'messageOverrides' | 'moveToItems' | 'open' | 'overlayPositioning' | 'placement' | 'scale' | 'setPosition' | 'setSize' | 'widthScale'>>, StencilJsx.HTMLAttributes<HTMLCalciteSortHandleElement> {
  onCalciteSortHandleBeforeClose?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleBeforeClose"]>;
  onCalciteSortHandleBeforeOpen?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleBeforeOpen"]>;
  onCalciteSortHandleClose?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleClose"]>;
  onCalciteSortHandleMove?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleMove"]>;
  onCalciteSortHandleOpen?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleOpen"]>;
  onCalciteSortHandleReorder?: EventHandler<HTMLCalciteSortHandleElement["calciteSortHandleReorder"]>;
}

interface StencilCalciteSortableList extends Partial<Pick<SortableList, 'canPull' | 'canPut' | 'disabled' | 'dragSelector' | 'group' | 'handleSelector' | 'layout' | 'loading'>>, StencilJsx.HTMLAttributes<HTMLCalciteSortableListElement> {
  onCalciteListOrderChange?: EventHandler<HTMLCalciteSortableListElement["calciteListOrderChange"]>;
}

interface StencilCalciteSplitButton extends Partial<Pick<SplitButton, 'appearance' | 'disabled' | 'download' | 'dropdownIconType' | 'dropdownLabel' | 'flipPlacements' | 'href' | 'kind' | 'loading' | 'overlayPositioning' | 'placement' | 'primaryIconEnd' | 'primaryIconFlipRtl' | 'primaryIconStart' | 'primaryLabel' | 'primaryText' | 'rel' | 'scale' | 'target' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteSplitButtonElement> {
  onCalciteSplitButtonPrimaryClick?: EventHandler<HTMLCalciteSplitButtonElement["calciteSplitButtonPrimaryClick"]>;
  onCalciteSplitButtonSecondaryClick?: EventHandler<HTMLCalciteSplitButtonElement["calciteSplitButtonSecondaryClick"]>;
}

interface StencilCalciteStack extends Partial<Pick<Stack, 'disabled'>>, StencilJsx.HTMLAttributes<HTMLCalciteStackElement> {
}

interface StencilCalciteStepper extends Partial<Pick<Stepper, 'icon' | 'layout' | 'messageOverrides' | 'numbered' | 'numberingSystem' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteStepperElement> {
  onCalciteStepperChange?: EventHandler<HTMLCalciteStepperElement["calciteStepperChange"]>;
  onCalciteStepperItemChange?: EventHandler<HTMLCalciteStepperElement["calciteStepperItemChange"]>;
}

interface StencilCalciteStepperItem extends Partial<Pick<StepperItem, 'complete' | 'description' | 'disabled' | 'error' | 'heading' | 'iconFlipRtl' | 'messageOverrides' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteStepperItemElement> {
  onCalciteStepperItemSelect?: EventHandler<HTMLCalciteStepperItemElement["calciteStepperItemSelect"]>;
}

interface StencilCalciteSwitch extends Partial<Pick<Switch, 'checked' | 'disabled' | 'form' | 'label' | 'name' | 'scale' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteSwitchElement> {
  onCalciteSwitchChange?: EventHandler<HTMLCalciteSwitchElement["calciteSwitchChange"]>;
}

interface StencilCalciteTab extends Partial<Pick<Tab, 'selected' | 'tab'>>, StencilJsx.HTMLAttributes<HTMLCalciteTabElement> {
}

interface StencilCalciteTabNav extends Partial<Pick<TabNav, 'messageOverrides' | 'position' | 'storageId' | 'syncId'>>, StencilJsx.HTMLAttributes<HTMLCalciteTabNavElement> {
  onCalciteTabChange?: EventHandler<HTMLCalciteTabNavElement["calciteTabChange"]>;
}

interface StencilCalciteTabTitle extends Partial<Pick<TabTitle, 'closable' | 'closed' | 'disabled' | 'iconEnd' | 'iconFlipRtl' | 'iconStart' | 'messageOverrides' | 'position' | 'selected' | 'tab'>>, StencilJsx.HTMLAttributes<HTMLCalciteTabTitleElement> {
  onCalciteTabsActivate?: EventHandler<HTMLCalciteTabTitleElement["calciteTabsActivate"]>;
  onCalciteTabsClose?: EventHandler<HTMLCalciteTabTitleElement["calciteTabsClose"]>;
}

interface StencilCalciteTable extends Required<Pick<Table, 'caption'>>, Partial<Pick<Table, 'bordered' | 'groupSeparator' | 'interactionMode' | 'layout' | 'messageOverrides' | 'numbered' | 'numberingSystem' | 'pageSize' | 'scale' | 'selectionDisplay' | 'selectionMode' | 'striped'>>, StencilJsx.HTMLAttributes<HTMLCalciteTableElement> {
  onCalciteTablePageChange?: EventHandler<HTMLCalciteTableElement["calciteTablePageChange"]>;
  onCalciteTableSelect?: EventHandler<HTMLCalciteTableElement["calciteTableSelect"]>;
}

interface StencilCalciteTableCell extends Partial<Pick<TableCell, 'alignment' | 'colSpan' | 'messageOverrides' | 'rowSpan'>>, StencilJsx.HTMLAttributes<HTMLCalciteTableCellElement> {
}

interface StencilCalciteTableHeader extends Partial<Pick<TableHeader, 'alignment' | 'colSpan' | 'description' | 'heading' | 'messageOverrides' | 'rowSpan'>>, StencilJsx.HTMLAttributes<HTMLCalciteTableHeaderElement> {
}

interface StencilCalciteTableRow extends Partial<Pick<TableRow, 'alignment' | 'disabled' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteTableRowElement> {
  onCalciteTableRowSelect?: EventHandler<HTMLCalciteTableRowElement["calciteTableRowSelect"]>;
}

interface StencilCalciteTabs extends Partial<Pick<Tabs, 'bordered' | 'layout' | 'position' | 'scale'>>, StencilJsx.HTMLAttributes<HTMLCalciteTabsElement> {
}

interface StencilCalciteTextArea extends Partial<Pick<TextArea, 'columns' | 'disabled' | 'form' | 'groupSeparator' | 'label' | 'limitText' | 'maxLength' | 'messageOverrides' | 'minLength' | 'name' | 'numberingSystem' | 'placeholder' | 'readOnly' | 'required' | 'resize' | 'rows' | 'scale' | 'status' | 'validationIcon' | 'validationMessage' | 'value' | 'wrap'>>, StencilJsx.HTMLAttributes<HTMLCalciteTextAreaElement> {
  onCalciteTextAreaChange?: EventHandler<HTMLCalciteTextAreaElement["calciteTextAreaChange"]>;
  onCalciteTextAreaInput?: EventHandler<HTMLCalciteTextAreaElement["calciteTextAreaInput"]>;
}

interface StencilCalciteTile extends Partial<Pick<Tile, 'active' | 'alignment' | 'description' | 'disabled' | 'embed' | 'heading' | 'href' | 'icon' | 'iconFlipRtl' | 'label' | 'scale' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteTileElement> {
  onCalciteTileSelect?: EventHandler<HTMLCalciteTileElement["calciteTileSelect"]>;
}

interface StencilCalciteTileGroup extends Required<Pick<TileGroup, 'label'>>, Partial<Pick<TileGroup, 'alignment' | 'disabled' | 'layout' | 'scale' | 'selectionAppearance' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteTileGroupElement> {
  onCalciteTileGroupSelect?: EventHandler<HTMLCalciteTileGroupElement["calciteTileGroupSelect"]>;
}

interface StencilCalciteTileSelect extends Partial<Pick<TileSelect, 'checked' | 'description' | 'disabled' | 'heading' | 'icon' | 'iconFlipRtl' | 'inputAlignment' | 'inputEnabled' | 'name' | 'type' | 'value' | 'width'>>, StencilJsx.HTMLAttributes<HTMLCalciteTileSelectElement> {
  onCalciteTileSelectChange?: EventHandler<HTMLCalciteTileSelectElement["calciteTileSelectChange"]>;
}

interface StencilCalciteTileSelectGroup extends Partial<Pick<TileSelectGroup, 'disabled' | 'layout'>>, StencilJsx.HTMLAttributes<HTMLCalciteTileSelectGroupElement> {
}

interface StencilCalciteTimePicker extends Partial<Pick<TimePicker, 'hourFormat' | 'messageOverrides' | 'numberingSystem' | 'scale' | 'step' | 'value'>>, StencilJsx.HTMLAttributes<HTMLCalciteTimePickerElement> {
  onCalciteTimePickerChange?: EventHandler<HTMLCalciteTimePickerElement["calciteTimePickerChange"]>;
}

interface StencilCalciteTip extends Partial<Pick<Tip, 'closed' | 'closeDisabled' | 'heading' | 'headingLevel' | 'messageOverrides' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteTipElement> {
  onCalciteTipDismiss?: EventHandler<HTMLCalciteTipElement["calciteTipDismiss"]>;
}

interface StencilCalciteTipGroup extends Partial<Pick<TipGroup, 'groupTitle'>>, StencilJsx.HTMLAttributes<HTMLCalciteTipGroupElement> {
}

interface StencilCalciteTipManager extends Partial<Pick<TipManager, 'closed' | 'headingLevel' | 'messageOverrides'>>, StencilJsx.HTMLAttributes<HTMLCalciteTipManagerElement> {
  onCalciteTipManagerClose?: EventHandler<HTMLCalciteTipManagerElement["calciteTipManagerClose"]>;
}

interface StencilCalciteTooltip extends Partial<Pick<Tooltip, 'closeOnClick' | 'label' | 'offsetDistance' | 'offsetSkidding' | 'open' | 'overlayPositioning' | 'placement' | 'referenceElement'>>, StencilJsx.HTMLAttributes<HTMLCalciteTooltipElement> {
  onCalciteTooltipBeforeClose?: EventHandler<HTMLCalciteTooltipElement["calciteTooltipBeforeClose"]>;
  onCalciteTooltipBeforeOpen?: EventHandler<HTMLCalciteTooltipElement["calciteTooltipBeforeOpen"]>;
  onCalciteTooltipClose?: EventHandler<HTMLCalciteTooltipElement["calciteTooltipClose"]>;
  onCalciteTooltipOpen?: EventHandler<HTMLCalciteTooltipElement["calciteTooltipOpen"]>;
}

interface StencilCalciteTree extends Partial<Pick<Tree, 'lines' | 'scale' | 'selectionMode'>>, StencilJsx.HTMLAttributes<HTMLCalciteTreeElement> {
  onCalciteTreeSelect?: EventHandler<HTMLCalciteTreeElement["calciteTreeSelect"]>;
}

interface StencilCalciteTreeItem extends Partial<Pick<TreeItem, 'disabled' | 'expanded' | 'iconFlipRtl' | 'iconStart' | 'label' | 'selected'>>, StencilJsx.HTMLAttributes<HTMLCalciteTreeItemElement> {
}

interface ExposedElements {
  "calcite-accordion": StencilCalciteAccordion;
  "calcite-accordion-item": StencilCalciteAccordionItem;
  "calcite-action": StencilCalciteAction;
  "calcite-action-bar": StencilCalciteActionBar;
  "calcite-action-group": StencilCalciteActionGroup;
  "calcite-action-menu": StencilCalciteActionMenu;
  "calcite-action-pad": StencilCalciteActionPad;
  "calcite-alert": StencilCalciteAlert;
  "calcite-autocomplete": StencilCalciteAutocomplete;
  "calcite-autocomplete-item": StencilCalciteAutocompleteItem;
  "calcite-autocomplete-item-group": StencilCalciteAutocompleteItemGroup;
  "calcite-avatar": StencilCalciteAvatar;
  "calcite-block": StencilCalciteBlock;
  "calcite-block-group": StencilCalciteBlockGroup;
  "calcite-block-section": StencilCalciteBlockSection;
  "calcite-button": StencilCalciteButton;
  "calcite-card": StencilCalciteCard;
  "calcite-card-group": StencilCalciteCardGroup;
  "calcite-carousel": StencilCalciteCarousel;
  "calcite-carousel-item": StencilCalciteCarouselItem;
  "calcite-checkbox": StencilCalciteCheckbox;
  "calcite-chip": StencilCalciteChip;
  "calcite-chip-group": StencilCalciteChipGroup;
  "calcite-color-picker": StencilCalciteColorPicker;
  "calcite-color-picker-hex-input": StencilCalciteColorPickerHexInput;
  "calcite-color-picker-swatch": StencilCalciteColorPickerSwatch;
  "calcite-combobox": StencilCalciteCombobox;
  "calcite-combobox-item": StencilCalciteComboboxItem;
  "calcite-combobox-item-group": StencilCalciteComboboxItemGroup;
  "calcite-date-picker": StencilCalciteDatePicker;
  "calcite-date-picker-day": StencilCalciteDatePickerDay;
  "calcite-date-picker-month": StencilCalciteDatePickerMonth;
  "calcite-date-picker-month-header": StencilCalciteDatePickerMonthHeader;
  "calcite-dialog": StencilCalciteDialog;
  "calcite-dropdown": StencilCalciteDropdown;
  "calcite-dropdown-group": StencilCalciteDropdownGroup;
  "calcite-dropdown-item": StencilCalciteDropdownItem;
  "calcite-fab": StencilCalciteFab;
  "calcite-filter": StencilCalciteFilter;
  "calcite-flow": StencilCalciteFlow;
  "calcite-flow-item": StencilCalciteFlowItem;
  "calcite-graph": StencilCalciteGraph;
  "calcite-handle": StencilCalciteHandle;
  "calcite-icon": StencilCalciteIcon;
  "calcite-inline-editable": StencilCalciteInlineEditable;
  "calcite-input": StencilCalciteInput;
  "calcite-input-date-picker": StencilCalciteInputDatePicker;
  "calcite-input-message": StencilCalciteInputMessage;
  "calcite-input-number": StencilCalciteInputNumber;
  "calcite-input-text": StencilCalciteInputText;
  "calcite-input-time-picker": StencilCalciteInputTimePicker;
  "calcite-input-time-zone": StencilCalciteInputTimeZone;
  "calcite-label": StencilCalciteLabel;
  "calcite-link": StencilCalciteLink;
  "calcite-list": StencilCalciteList;
  "calcite-list-item": StencilCalciteListItem;
  "calcite-list-item-group": StencilCalciteListItemGroup;
  "calcite-loader": StencilCalciteLoader;
  "calcite-menu": StencilCalciteMenu;
  "calcite-menu-item": StencilCalciteMenuItem;
  "calcite-meter": StencilCalciteMeter;
  "calcite-modal": StencilCalciteModal;
  "calcite-navigation": StencilCalciteNavigation;
  "calcite-navigation-logo": StencilCalciteNavigationLogo;
  "calcite-navigation-user": StencilCalciteNavigationUser;
  "calcite-notice": StencilCalciteNotice;
  "calcite-option": StencilCalciteOption;
  "calcite-option-group": StencilCalciteOptionGroup;
  "calcite-pagination": StencilCalcitePagination;
  "calcite-panel": StencilCalcitePanel;
  "calcite-popover": StencilCalcitePopover;
  "calcite-progress": StencilCalciteProgress;
  "calcite-radio-button": StencilCalciteRadioButton;
  "calcite-radio-button-group": StencilCalciteRadioButtonGroup;
  "calcite-rating": StencilCalciteRating;
  "calcite-scrim": StencilCalciteScrim;
  "calcite-segmented-control": StencilCalciteSegmentedControl;
  "calcite-segmented-control-item": StencilCalciteSegmentedControlItem;
  "calcite-select": StencilCalciteSelect;
  "calcite-sheet": StencilCalciteSheet;
  "calcite-shell": StencilCalciteShell;
  "calcite-shell-center-row": StencilCalciteShellCenterRow;
  "calcite-shell-panel": StencilCalciteShellPanel;
  "calcite-slider": StencilCalciteSlider;
  "calcite-sort-handle": StencilCalciteSortHandle;
  "calcite-sortable-list": StencilCalciteSortableList;
  "calcite-split-button": StencilCalciteSplitButton;
  "calcite-stack": StencilCalciteStack;
  "calcite-stepper": StencilCalciteStepper;
  "calcite-stepper-item": StencilCalciteStepperItem;
  "calcite-switch": StencilCalciteSwitch;
  "calcite-tab": StencilCalciteTab;
  "calcite-tab-nav": StencilCalciteTabNav;
  "calcite-tab-title": StencilCalciteTabTitle;
  "calcite-table": StencilCalciteTable;
  "calcite-table-cell": StencilCalciteTableCell;
  "calcite-table-header": StencilCalciteTableHeader;
  "calcite-table-row": StencilCalciteTableRow;
  "calcite-tabs": StencilCalciteTabs;
  "calcite-text-area": StencilCalciteTextArea;
  "calcite-tile": StencilCalciteTile;
  "calcite-tile-group": StencilCalciteTileGroup;
  "calcite-tile-select": StencilCalciteTileSelect;
  "calcite-tile-select-group": StencilCalciteTileSelectGroup;
  "calcite-time-picker": StencilCalciteTimePicker;
  "calcite-tip": StencilCalciteTip;
  "calcite-tip-group": StencilCalciteTipGroup;
  "calcite-tip-manager": StencilCalciteTipManager;
  "calcite-tooltip": StencilCalciteTooltip;
  "calcite-tree": StencilCalciteTree;
  "calcite-tree-item": StencilCalciteTreeItem;
}

export namespace JSX {
  export interface IntrinsicElements extends ExposedElements {}
}

declare module "@stencil/core/internal/stencil-public-runtime" {
  export namespace h.JSX {
    interface IntrinsicElements extends ExposedElements {}
  }
}