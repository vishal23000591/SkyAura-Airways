import { BinaryFeatureCollection, BinaryPointFeature } from '@loaders.gl/schema';
import type { Properties, NumericProps } from "./layers/schema/spatialjson-utils.js";
export declare function assert(condition: unknown, message?: string): asserts condition;
export declare function createBinaryProxy(data: {
    numericProps: NumericProps;
    properties: Properties[];
}, index: number): object[];
export declare function getWorkerUrl(id: string, version: string): string;
export declare function scaleIdentity(): {
    (x: any): any;
    invert: any;
    domain: (d: any) => any;
    range(d: any): any;
    unknown(u: any): any;
    copy(): any;
};
export declare const isObject: (x: unknown) => boolean;
export declare const isPureObject: (x: any) => boolean;
export declare function createEmptyBinary(): Required<BinaryFeatureCollection>;
export declare function createBinaryPointFeature(positions: number[] | Float32Array | Float64Array, featureIds: number[] | Uint16Array | Uint32Array, globalFeatureIds: number[] | Uint16Array | Uint32Array, numericProps: NumericProps, properties: Properties, size?: 2 | 3): BinaryPointFeature;
export declare function initializeNumericProps(numPoints: number, sourceProps?: NumericProps): NumericProps;
export declare function copyNumericProps(sourceProps: NumericProps, targetProps: NumericProps, sourceIndex: number, targetIndex: number): void;
//# sourceMappingURL=utils.d.ts.map