import { DirectiveResult } from 'lit-html/directive.js';
import { Ref } from 'lit-html/directives/ref.js';
export type EventHandlerUnion<T, E extends Event> = (e: E & {
    currentTarget: T;
    target: Element;
}) => void;
export type InputEventHandlerUnion<T, E extends InputEvent> = (e: E & {
    currentTarget: T;
    target: T extends HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement ? T : Element;
}) => void;
export type ChangeEventHandlerUnion<T, E extends Event> = (e: E & {
    currentTarget: T;
    target: T extends HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement ? T : Element;
}) => void;
export type FocusEventHandlerUnion<T, E extends FocusEvent> = (e: E & {
    currentTarget: T;
    target: T extends HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement ? T : Element;
}) => void;
export type EventHandler<E> = {
    bivarianceHack(event: E): void;
}["bivarianceHack"];
export interface CustomAttributes<T = HTMLElement> {
    /**
     * [Documentation](https://qawebgis.esri.com/components/lumina/jsx#key-prop)
     */
    key?: unknown;
    /**
     * [Documentation](https://qawebgis.esri.com/components/lumina/jsx#refs)
     */
    ref?: EventHandler<T | undefined> | Ref<T>;
    /**
     * [Documentation](https://qawebgis.esri.com/components/lumina/jsx#lit-directives)
     */
    directives?: readonly DirectiveResult[];
    /**
     * [Documentation](https://qawebgis.esri.com/components/lumina/jsx#deferring-web-component-load)
     */
    deferLoad?: true;
}
