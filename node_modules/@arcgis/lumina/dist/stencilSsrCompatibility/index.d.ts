import { RenderInfo } from '@lit-labs/ssr/lib/render.js';
import { Readable } from 'node:stream';
/**
 * @deprecated
 * Use `render` from `@lit-labs/ssr` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export interface HydrateResults {
    buildId: string;
    diagnostics: any[];
    url: string;
    host: string;
    hostname: string;
    href: string;
    port: string;
    pathname: string;
    search: string;
    hash: string;
    html: string;
    components: HydrateComponent[];
    anchors: any[];
    imgs: any[];
    scripts: any[];
    styles: any[];
    staticData: any[];
    title: string;
    hydratedCount: number;
    httpStatus: number;
}
export interface HydrateComponent {
    tag: string;
    mode: string;
    count: number;
    depth: number;
}
/**
 * @deprecated
 * Use `getWindow` from `@lit-labs/ssr/lib/dom-shim` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export declare function createWindowFromHtml(templateHtml: string, uniqueId?: string): any;
/**
 * @deprecated
 * Use `RenderResultReadable` from `@lit-labs/ssr` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export declare function streamToString(html: any, options?: Partial<RenderInfo>): Readable;
/**
 * @deprecated
 * Use `render` from `@lit-labs/ssr` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export declare function renderToString(html: any, options?: Partial<RenderInfo>): Promise<HydrateResults>;
export declare function renderToString(html: any, options: Partial<RenderInfo> | undefined, asStream: true): Readable;
/**
 * @deprecated
 * Use `render` from `@lit-labs/ssr` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export declare function hydrateDocument(doc: any, options?: Partial<RenderInfo>): Promise<HydrateResults>;
export declare function hydrateDocument(doc: any, options: Partial<RenderInfo> | undefined, asStream: true): Readable;
/**
 * @deprecated
 * Use `render` from `@lit-labs/ssr` instead.
 *
 * @see https://lit.dev/docs/ssr/server-usage/
 */
export declare function serializeDocumentToString(doc: any, _unused?: unknown): string;
