import { LitElement } from '../LitElement';
import { GenericControllerType, Controller } from './Controller';
/**
 * Controller is a function that takes a component instance and then can
 * export some values to the component, or hook into component's lifecycle
 *
 * See controllers documentation for many example controllers and their usages
 */
export declare const makeController: <Exports>(constructor: (component: LitElement, controller: Controller<Exports>) => Exports | Promise<Exports>) => Exports;
/**
 * If your controller requires some specific properties to be present on the
 * component, besides what's included in the LitElement, use
 * makeGenericController
 *
 * When using a controller created using makeGenericController(), consumer must
 * pass in "this" explicitly for proper type-checking. If controller was
 * created using makeController(), that is not necessary
 */
export declare const makeGenericController: <Exports, Component = LitElement>(constructor: (component: Component & LitElement, controller: GenericControllerType<Exports, Component>) => Exports | Promise<Exports>) => (component: Component & LitElement) => Exports;
