import { GenericT9nStrings, LocaleObserver } from '@arcgis/components-utils';
export type T9nMeta<T9nStrings extends GenericT9nStrings> = {
    _lang: LocaleObserver["lang"];
    _t9nLocale: LocaleObserver["t9nLocale"];
    _loading: boolean;
    /**
     * The "_overrides" property won't actually exist at runtime and exists only
     * to simplify typing like so:
     *
     * @example
     * ```ts
     *   // Type of the messageOverrides is set automatically based on _overrides:
     *   @property() messageOverrides?: typeof this.messages._overrides;
     * ```
     */
    _overrides: DeepPartial<T9nStrings>;
    /**
     * If messageOverrides are in effect, this will contain original strings
     */
    _original?: T9nStrings;
};
type DeepPartial<T> = T extends object ? {
    [P in keyof T]?: DeepPartial<T[P]>;
} : T;
type Options = {
    readonly name?: string | null;
    /** @default false */
    readonly blocking?: boolean;
};
export interface UseT9n {
    <Strings extends GenericT9nStrings>(options: Options & {
        readonly blocking: true;
    }): Strings & T9nMeta<Strings>;
    <Strings extends GenericT9nStrings>(options?: Options & {
        readonly blocking?: false;
    }): Partial<Strings> & T9nMeta<Strings>;
}
/**
 * Load component's localization strings.
 *
 * Documentation: https://qawebgis.esri.com/components/lumina/controllers/useT9n
 *
 * Design decisions:
 * - https://devtopia.esri.com/WebGIS/arcgis-web-components/discussions/969
 * - https://devtopia.esri.com/WebGIS/arcgis-web-components/discussions/987
 */
export declare const makeT9nController: (getAssetPath: (path: string) => string) => UseT9n;
export {};
