/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as o}from"../../core/accessorSupport/decorators/reader.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import{excludeTables as s}from"../../core/accessorSupport/layerContainerType.js";import{fixTimeInfoFields as i}from"../support/fieldUtils.js";import n from"../support/TimeInfo.js";import{timeUnitKebabDictionary as p}from"../../portal/timeUnitKebabDictionary.js";import{T as m}from"../../chunks/TimeExtent.js";import{T as a}from"../../chunks/TimeInterval.js";const f={type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation",layerContainerTypes:s}}},c=s=>{let c=class extends s{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const o=t.timeInfo.exportOptions;if(!o)return null;const r=o.timeOffset,s=p.fromJSON(o.timeOffsetUnits);return r&&s?new a({value:r,unit:s}):null}set timeInfo(e){i(e,this.fieldsIndex),this._set("timeInfo",e)}};return e([t({type:m,json:{write:!1}})],c.prototype,"timeExtent",void 0),e([t({type:a})],c.prototype,"timeOffset",void 0),e([o("service","timeOffset",["timeInfo.exportOptions"])],c.prototype,"readOffset",null),e([t({value:null,type:n,json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],c.prototype,"timeInfo",null),e([t(f)],c.prototype,"useViewTime",void 0),c=e([r("esri.layers.mixins.TemporalLayer")],c),c};export{c as TemporalLayer,f as useViewTimeProperty};
