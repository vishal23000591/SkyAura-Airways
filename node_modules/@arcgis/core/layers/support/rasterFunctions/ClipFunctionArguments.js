/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{JSONMap as r}from"../../../core/jsonMap.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{fromJSON as t}from"../../../geometry/support/jsonUtils.js";import{geometryTypes as p}from"../../../geometry/support/typeUtils.js";import i from"./BaseFunctionArguments.js";var c;const n=new r({1:"outside",2:"inside"},{useNumericKeys:!0});let m=c=class extends i{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new c({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};o([e({types:p,json:{read:t,write:!0}})],m.prototype,"clippingGeometry",void 0),o([e({json:{read:n.read,write:n.write}})],m.prototype,"clippingType",void 0),m=c=o([s("esri.layers.support.rasterFunctions.ClipFunctionArguments")],m);const u=m;export{u as default};
