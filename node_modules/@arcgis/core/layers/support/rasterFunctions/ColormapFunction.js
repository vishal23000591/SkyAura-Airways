/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import{isIntegerPixelType as s}from"../rasterFormats/pixelRangeUtils.js";import e from"./BaseRasterFunction.js";import p from"./ColormapFunctionArguments.js";import{getColormapByName as i}from"./colormaps.js";import{convertColorRampToColormap as n,getColorRampJSON as c}from"../../../renderers/support/colorRampUtils.js";import{fromJSON as a}from"../../../rest/support/colorRamps.js";let m=class extends e{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const o=this.sourceRasterInfos[0];if(o.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:r,colormapName:t,colorRamp:s,colorRampName:e}=this.functionArguments;if(!r?.length)if(s)this.colorRamp=s,r=n(s,{interpolateAlpha:!0});else if(e){const o=c(e);o&&(r=n(o),this.colorRamp=a(o))}else t&&(r=i(t));if(!r?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const p=this._getOutputPixelType(o.pixelType);this.outputPixelType=p.startsWith("f")?"s32":p;const m=o.clone();return m.pixelType=this.outputPixelType,m.colormap=r,m.bandCount=1,this.rasterInfo=m,{success:!0,supportsGPU:!0}}_processPixels(o){let r=o.pixelBlocks?.[0];return!r||s(r.pixelType)||(r=r.clone(),r.clamp(this.outputPixelType)),r}};o([r({json:{write:!0,name:"rasterFunction"}})],m.prototype,"functionName",void 0),o([r({type:p,json:{write:!0,name:"rasterFunctionArguments"}})],m.prototype,"functionArguments",void 0),o([r()],m.prototype,"rasterArgumentNames",void 0),o([r()],m.prototype,"isNoopProcess",void 0),o([r({json:{write:!0}})],m.prototype,"indexedColormap",void 0),o([r()],m.prototype,"colorRamp",void 0),m=o([t("esri.layers.support.rasterFunctions.ColormapFunction")],m);const u=m;export{u as default};
