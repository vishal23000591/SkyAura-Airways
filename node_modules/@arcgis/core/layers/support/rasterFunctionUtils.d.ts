import "../../interfaces";

export const defaultRaster: __esri.rasterFunctionUtils["defaultRaster"];
export const abs: __esri.rasterFunctionUtils["abs"];
export const acos: __esri.rasterFunctionUtils["acos"];
export const acosh: __esri.rasterFunctionUtils["acosh"];
export const argStatistics: __esri.rasterFunctionUtils["argStatistics"];
export const asin: __esri.rasterFunctionUtils["asin"];
export const asinh: __esri.rasterFunctionUtils["asinh"];
export const aspect: __esri.rasterFunctionUtils["aspect"];
export const atan: __esri.rasterFunctionUtils["atan"];
export const atan2: __esri.rasterFunctionUtils["atan2"];
export const atanh: __esri.rasterFunctionUtils["atanh"];
export const bandArithmeticBAI: __esri.rasterFunctionUtils["bandArithmeticBAI"];
export const bandArithmeticCIg: __esri.rasterFunctionUtils["bandArithmeticCIg"];
export const bandArithmeticCIre: __esri.rasterFunctionUtils["bandArithmeticCIre"];
export const bandArithmeticClayMinerals: __esri.rasterFunctionUtils["bandArithmeticClayMinerals"];
export const bandArithmeticCustom: __esri.rasterFunctionUtils["bandArithmeticCustom"];
export const bandArithmeticEVI: __esri.rasterFunctionUtils["bandArithmeticEVI"];
export const bandArithmeticFerrousMinerals: __esri.rasterFunctionUtils["bandArithmeticFerrousMinerals"];
export const bandArithmeticGEMI: __esri.rasterFunctionUtils["bandArithmeticGEMI"];
export const bandArithmeticGNDVI: __esri.rasterFunctionUtils["bandArithmeticGNDVI"];
export const bandArithmeticGVITM: __esri.rasterFunctionUtils["bandArithmeticGVITM"];
export const bandArithmeticIronOxide: __esri.rasterFunctionUtils["bandArithmeticIronOxide"];
export const bandArithmeticMNDWI: __esri.rasterFunctionUtils["bandArithmeticMNDWI"];
export const bandArithmeticMSAVI: __esri.rasterFunctionUtils["bandArithmeticMSAVI"];
export const bandArithmeticMTVI2: __esri.rasterFunctionUtils["bandArithmeticMTVI2"];
export const bandArithmeticNBR: __esri.rasterFunctionUtils["bandArithmeticNBR"];
export const bandArithmeticNDBI: __esri.rasterFunctionUtils["bandArithmeticNDBI"];
export const bandArithmeticNDMI: __esri.rasterFunctionUtils["bandArithmeticNDMI"];
export const bandArithmeticNDSI: __esri.rasterFunctionUtils["bandArithmeticNDSI"];
export const bandArithmeticNDVI: __esri.rasterFunctionUtils["bandArithmeticNDVI"];
export const bandArithmeticNDVIre: __esri.rasterFunctionUtils["bandArithmeticNDVIre"];
export const bandArithmeticNDWI: __esri.rasterFunctionUtils["bandArithmeticNDWI"];
export const bandArithmeticPVI: __esri.rasterFunctionUtils["bandArithmeticPVI"];
export const bandArithmeticRTVICore: __esri.rasterFunctionUtils["bandArithmeticRTVICore"];
export const bandArithmeticSAVI: __esri.rasterFunctionUtils["bandArithmeticSAVI"];
export const bandArithmeticSR: __esri.rasterFunctionUtils["bandArithmeticSR"];
export const bandArithmeticSRre: __esri.rasterFunctionUtils["bandArithmeticSRre"];
export const bandArithmeticSultan: __esri.rasterFunctionUtils["bandArithmeticSultan"];
export const bandArithmeticTSAVI: __esri.rasterFunctionUtils["bandArithmeticTSAVI"];
export const bandArithmeticVARI: __esri.rasterFunctionUtils["bandArithmeticVARI"];
export const bandArithmeticWNDWI: __esri.rasterFunctionUtils["bandArithmeticWNDWI"];
export const bitwiseAnd: __esri.rasterFunctionUtils["bitwiseAnd"];
export const bitwiseLeftShift: __esri.rasterFunctionUtils["bitwiseLeftShift"];
export const bitwiseNot: __esri.rasterFunctionUtils["bitwiseNot"];
export const bitwiseOr: __esri.rasterFunctionUtils["bitwiseOr"];
export const bitwiseRightShift: __esri.rasterFunctionUtils["bitwiseRightShift"];
export const bitwiseXor: __esri.rasterFunctionUtils["bitwiseXor"];
export const booleanAnd: __esri.rasterFunctionUtils["booleanAnd"];
export const booleanNot: __esri.rasterFunctionUtils["booleanNot"];
export const booleanOr: __esri.rasterFunctionUtils["booleanOr"];
export const booleanXor: __esri.rasterFunctionUtils["booleanXor"];
export const calculate: __esri.rasterFunctionUtils["calculate"];
export const cellStatistics: __esri.rasterFunctionUtils["cellStatistics"];
export const clip: __esri.rasterFunctionUtils["clip"];
export const colormap: __esri.rasterFunctionUtils["colormap"];
export const colormapToRGB: __esri.rasterFunctionUtils["colormapToRGB"];
export const colorspaceConversion: __esri.rasterFunctionUtils["colorspaceConversion"];
export const compositeBand: __esri.rasterFunctionUtils["compositeBand"];
export const computeChange: __esri.rasterFunctionUtils["computeChange"];
export const conditional: __esri.rasterFunctionUtils["conditional"];
export const contrastBrightness: __esri.rasterFunctionUtils["contrastBrightness"];
export const convolution: __esri.rasterFunctionUtils["convolution"];
export const cos: __esri.rasterFunctionUtils["cos"];
export const cosh: __esri.rasterFunctionUtils["cosh"];
export const createColorComposite: __esri.rasterFunctionUtils["createColorComposite"];
export const curvature: __esri.rasterFunctionUtils["curvature"];
export const divide: __esri.rasterFunctionUtils["divide"];
export const equalTo: __esri.rasterFunctionUtils["equalTo"];
export const exp: __esri.rasterFunctionUtils["exp"];
export const exp10: __esri.rasterFunctionUtils["exp10"];
export const exp2: __esri.rasterFunctionUtils["exp2"];
export const extractBand: __esri.rasterFunctionUtils["extractBand"];
export const float: __esri.rasterFunctionUtils["float"];
export const grayscale: __esri.rasterFunctionUtils["grayscale"];
export const greaterThan: __esri.rasterFunctionUtils["greaterThan"];
export const greaterThanEqual: __esri.rasterFunctionUtils["greaterThanEqual"];
export const hillshade: __esri.rasterFunctionUtils["hillshade"];
export const int: __esri.rasterFunctionUtils["int"];
export const isNull: __esri.rasterFunctionUtils["isNull"];
export const lessThan: __esri.rasterFunctionUtils["lessThan"];
export const lessThanEqual: __esri.rasterFunctionUtils["lessThanEqual"];
export const log: __esri.rasterFunctionUtils["log"];
export const log10: __esri.rasterFunctionUtils["log10"];
export const log2: __esri.rasterFunctionUtils["log2"];
export const mask: __esri.rasterFunctionUtils["mask"];
export const minus: __esri.rasterFunctionUtils["minus"];
export const mod: __esri.rasterFunctionUtils["mod"];
export const negate: __esri.rasterFunctionUtils["negate"];
export const notEqual: __esri.rasterFunctionUtils["notEqual"];
export const plus: __esri.rasterFunctionUtils["plus"];
export const power: __esri.rasterFunctionUtils["power"];
export const remap: __esri.rasterFunctionUtils["remap"];
export const roundDown: __esri.rasterFunctionUtils["roundDown"];
export const roundUp: __esri.rasterFunctionUtils["roundUp"];
export const setNull: __esri.rasterFunctionUtils["setNull"];
export const shadedRelief: __esri.rasterFunctionUtils["shadedRelief"];
export const sin: __esri.rasterFunctionUtils["sin"];
export const sinh: __esri.rasterFunctionUtils["sinh"];
export const slope: __esri.rasterFunctionUtils["slope"];
export const spectralConversion: __esri.rasterFunctionUtils["spectralConversion"];
export const sqrt: __esri.rasterFunctionUtils["sqrt"];
export const square: __esri.rasterFunctionUtils["square"];
export const statistics: __esri.rasterFunctionUtils["statistics"];
export const statisticsHistogram: __esri.rasterFunctionUtils["statisticsHistogram"];
export const stretchMinMax: __esri.rasterFunctionUtils["stretchMinMax"];
export const stretchNone: __esri.rasterFunctionUtils["stretchNone"];
export const stretchPercentClip: __esri.rasterFunctionUtils["stretchPercentClip"];
export const stretchStandardDeviation: __esri.rasterFunctionUtils["stretchStandardDeviation"];
export const table: __esri.rasterFunctionUtils["table"];
export const tan: __esri.rasterFunctionUtils["tan"];
export const tanh: __esri.rasterFunctionUtils["tanh"];
export const tasseledCap: __esri.rasterFunctionUtils["tasseledCap"];
export const threshold: __esri.rasterFunctionUtils["threshold"];
export const times: __esri.rasterFunctionUtils["times"];
export const transposeBits: __esri.rasterFunctionUtils["transposeBits"];
export const weightedOverlay: __esri.rasterFunctionUtils["weightedOverlay"];
export const weightedSum: __esri.rasterFunctionUtils["weightedSum"];
