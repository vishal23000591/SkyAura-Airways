/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../core/Collection.js";import t from"../core/CollectionFlattener.js";import i from"../core/Error.js";import{abortHandle as s}from"../core/handleUtils.js";import{clone as o}from"../core/lang.js";import{loadAll as a}from"../core/loadAll.js";import l from"../core/Logger.js";import{MultiOriginJSONMixin as n}from"../core/MultiOriginJSONSupport.js";import{throwIfAbortError as p,ignoreAbortErrors as u}from"../core/promiseUtils.js";import{whenOnce as y}from"../core/reactiveUtils.js";import{join as c}from"../core/urlUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import{reader as m}from"../core/accessorSupport/decorators/reader.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import b from"../geometry/SpatialReference.js";import f from"./Layer.js";import g from"./buildingSublayers/BuildingComponentSublayer.js";import S from"./buildingSublayers/BuildingGroupSublayer.js";import{APIKeyMixin as v}from"./mixins/APIKeyMixin.js";import{ArcGISService as j}from"./mixins/ArcGISService.js";import{CustomParametersMixin as w}from"./mixins/CustomParametersMixin.js";import{OperationalLayer as _}from"./mixins/OperationalLayer.js";import{PortalLayer as I}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as L}from"./mixins/ScaleRangeLayer.js";import{SceneService as O,SaveOperationType as T}from"./mixins/SceneService.js";import{findAssociatedFeatureService as E}from"./support/associatedFeatureServiceUtils.js";import P from"./support/BuildingFilter.js";import A from"./support/BuildingSummaryStatistics.js";import{sceneLayerFullExtent as x,legendEnabled as F,readOnlyService as B,elevationInfo as K}from"./support/commonProperties.js";import{logInvalidElevationInfoWarning as C,elevationModeRequiredMessage as U,featureExpressionUnsupportedMessage as $}from"../support/elevationInfoUtils.js";const R=r.ofType(P),M=o(S.sublayersProperty),k=M.json?.origins;k&&(k["web-scene"]={type:[g],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},k["portal-item"]={type:[g],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}});let H=class extends(O(j(_(I(L(n(w(v(f))))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new t({getCollections:()=>[this.sublayers],getChildrenFunction:e=>"building-group"===e.type?e.sublayers:null}),this.sublayers=null,this._allSublayerOverrides=null,this.filters=new R,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.legendEnabled=!0,this.type="building-scene"}normalizeCtorArgs(e){return"string"==typeof e?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,r,t){const i=S.readSublayers(e,r,t);return S.forEachSublayer(i,(e=>e.layer=this)),this._allSublayerOverrides&&(N(i,this._allSublayerOverrides),this._allSublayerOverrides=null),i}write(e,r){return e=super.write(e,r),!r||"web-scene"!==r.origin&&"portal-item"!==r.origin||(this.sublayers?W(this.sublayers,e,r):this._allSublayerOverrides&&z(this._allSublayerOverrides,e,r)),e}read(e,r){if(super.read(e,r),("web-scene"===r?.origin||"portal-item"===r?.origin)&&Array.isArray(e?.sublayers)){const t=V(e.sublayers,r);this.sublayers?G(this.sublayers,t):(this._allSublayerOverrides??=new Map,this._allSublayerOverrides.set(r.origin,t))}}readSummaryStatistics(e,r){if("string"==typeof r.statisticsHRef&&this.parsedUrl){const e=c(this.parsedUrl.path,r.statisticsHRef);return new A({url:e,apiKey:this.apiKey,customParameters:this.customParameters})}return null}set elevationInfo(e){null!=e&&"absolute-height"!==e.mode||this._set("elevationInfo",e),this._validateElevationInfo(e)}load(e){const r=null!=e?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(p).then((()=>this._fetchService(r))).then((()=>this._fetchAssociatedFeatureService(r)));return this.addResolvingPromise(t),Promise.resolve(this)}loadAll(){return a(this,(e=>{S.forEachSublayer(this.sublayers,(r=>{"building-group"!==r.type&&e(r)})),this.summaryStatistics&&e(this.summaryStatistics)}))}async saveAs(e,r){return this._debouncedSaveOperations(T.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(T.SAVE,e)}validateLayer(e){if(!e.layerType||"Building"!==e.layerType)throw new i("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}async _fetchAssociatedFeatureService(e){try{const{portalItem:r}=await E(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e});this.associatedFeatureServiceItem=r}catch(r){u(this._logWarningOnPopupEnabled())}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(s(e)),await y((()=>this.allSublayers.filter((e=>"building-component"===e.type)).some((e=>e.popupEnabled&&null!=e.popupTemplate))),e.signal);const r=this.allSublayers.filter((e=>"building-component"===e.type)).filter((e=>e.popupEnabled&&null!=e.popupTemplate)),t=[],i=[];for(const s of r){const e=s.title??`untitled ${s.id}`;s.attributeStorageInfo?t.push(e):i.push(e)}const o="\n  ",a=t.length>0?`\nThe following sublayers will fall back to binary attributes for Popups:${o}${t.join(o)}`:"",n=i.length>0?`\nThe following sublayers have no binary attributes and will not work with Popups:${o}${i.join(o)}`:"";l.getLogger(this).warn(`Associated FeatureLayer could not be loaded for this BuildingSceneLayer: ${this.title}.`,a,n)}_validateElevationInfo(e){const r="Building scene layers";C(l.getLogger(this),U(r,"absolute-height",e)),C(l.getLogger(this),$(r,e))}};function N(e,r){r.forEach((r=>G(e,r)))}function G(e,r){const{overrides:t,context:i}=r;S.forEachSublayer(e,(e=>e.read(t.get(e.id),i)))}function V(e,r){const t=new Map;for(const s of e)null!=s&&"object"==typeof s&&"number"==typeof s.id?t.set(s.id,s):r.messages?.push(new i("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:s}));return{overrides:t,context:r}}function W(e,r,t){const i=[];S.forEachSublayer(e,(e=>{const r=e.write({},t);Object.keys(r).length>1&&i.push(r)})),i.length>0&&(r.sublayers=i)}function z(e,r,t){const i=t?.origin&&e.get(t.origin);i&&(r.sublayers=[],i.overrides.forEach((e=>{r.sublayers.push(o(e))})))}e([d({type:["BuildingSceneLayer"]})],H.prototype,"operationalLayerType",void 0),e([d({readOnly:!0})],H.prototype,"allSublayers",void 0),e([d(M)],H.prototype,"sublayers",void 0),e([m("service","sublayers")],H.prototype,"readSublayers",null),e([d({type:R,nonNullable:!0,json:{write:!0}})],H.prototype,"filters",void 0),e([d({type:String,json:{write:!0}})],H.prototype,"activeFilterId",void 0),e([d({readOnly:!0,type:A})],H.prototype,"summaryStatistics",void 0),e([m("summaryStatistics",["statisticsHRef"])],H.prototype,"readSummaryStatistics",null),e([d({type:[String],json:{read:!1}})],H.prototype,"outFields",void 0),e([d(x)],H.prototype,"fullExtent",void 0),e([d(F)],H.prototype,"legendEnabled",void 0),e([d({type:["show","hide","hide-children"]})],H.prototype,"listMode",void 0),e([d(B(b))],H.prototype,"spatialReference",void 0),e([d(K)],H.prototype,"elevationInfo",null),e([d({json:{read:!1},readOnly:!0})],H.prototype,"type",void 0),e([d()],H.prototype,"associatedFeatureServiceItem",void 0),H=e([h("esri.layers.BuildingSceneLayer")],H);const J=H;export{J as default};
