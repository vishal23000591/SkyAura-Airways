/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../analysis/support/AnalysisOriginWebScene.js";import t from"../../core/Collection.js";import{castForReferenceSetter as i,referenceSetter as o}from"../../core/collectionUtils.js";import"../../core/Logger.js";import"../../core/has.js";import"../../core/RandomLCG.js";import"../../core/Error.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";const r=["slice"];let a=class extends t{constructor(e){super(e),this.addHandles([this.on("after-add",(e=>{this._setOrigin(e.item)})),this.on("before-remove",(e=>{const{origin:s}=e.item;"web-scene"===s?.type&&this._setOrigin(e.item,null)}))])}initialize(){for(const e of this.items)this._setOrigin(e)}_setOrigin(e,t=new s){e.origin=t}updateFrom(e){const t=e.analyses.filter((e=>c(e)));this.removeAll(),t.length&&this.addMany(t.map((e=>(e.origin=new s,e.clone()))))}applyTo(e){e.analyses.destroyMany(e.analyses.filter((({origin:e})=>"web-scene"===e?.type))),e.analyses.addMany(this.map((e=>e.clone())))}toJSON(e){return this.items.filter(c).map((s=>s.toJSON(e)))}};function l(e){return{type:a,cast:i,clonable:e=>new a({items:e.items.map((e=>e.clone()))}),set(s){this._set(e,o(s,this._get(e),a))},json:{read(s,t,i){i?.hooks?.onAfterLoad((()=>m(this[e],s,i)))},write:{overridePolicy:e=>({enabled:e.length>0})}}}}function c(e){return r.includes(e.type)&&e.valid}async function m(e,s,t){if(!s)return;const i=await Promise.allSettled(s.map((e=>p(e,t))));for(const o of i)"fulfilled"===o.status&&e.add(o.value)}async function p(e,s){const t=new(await d[e.type]());return t.read(e,s),t}a=e([n("esri.webscene.support.analysisUtils.WebSceneAnalysesCollection")],a);const d={slice:async()=>{const{default:e}=await import("../../analysis/SliceAnalysis.js");return e}};export{a as WebSceneAnalysesCollection,l as webSceneAnalysisCollectionProperty,d as webSceneAnalysisRegistry};
