/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import e from"../Basemap.js";import r from"../core/Collection.js";import s from"../core/Logger.js";import{destroyMaybe as o}from"../core/maybe.js";import{ensureType as n}from"../core/accessorSupport/ensureType.js";import{hasBasemapStylesApiKey as t}from"./apiKeyUtils.js";import{esriBasemapDefinitions as i}from"./basemapDefinitions.js";import{layerDefinitionEquals as a,layerToDefinition as c}from"./basemapUtils.js";const f=()=>s.getLogger("esri.support.basemapUtils");function p(){return{}}function l(e){for(const r in e){const s=e[r];o(s),delete e[r]}}function m(r,s){let o;if("string"==typeof r){const n=r in i,a=!n&&r.includes("/");if(!n&&!a){if(t())f().warn(`Unable to find basemap definition for: ${r}. See available styles at https://developers.arcgis.com/rest/basemap-styles/`);else{const e=Object.entries(i).filter((([e,r])=>r.classic||r.is3d)).map((([e])=>`"${e}"`)).sort().join(", ");f().warn(`Unable to find basemap definition for: ${r}. Try one of these: ${e}`)}return null}s&&(o=s[r]),o||(o=n?e.fromId(r):new e({style:{id:r}}),s&&(s[r]=o))}else o=n(e,r);return o?.destroyed&&(f().warn("The provided basemap is already destroyed",{basemap:o}),o=null),o}function u(e,r=null){const s=m(e);if(!s)return null;const o=s.clone();return r&&(o.baseLayers=d(o.baseLayers,r.baseLayers),o.referenceLayers=d(o.referenceLayers,r.referenceLayers)),o}function d(e,s){const o=new r;return e.forEach((e=>{const r=s.find((r=>"scene"!==r.type&&a(c(e),c(r))))||e;o.includes(r)?o.push(e):o.push(r)})),o}export{m as basemapEnsureType,u as clonePreservingTiledLayers,p as createCache,l as destroyCache};
