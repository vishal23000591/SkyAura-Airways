/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import o from"./InputBase.js";let r=class extends o{constructor(){super(...arguments),this.editType="NA"}get editable(){return this._evaluatedEditableExpression??!0}get _evaluatedEditableExpression(){let e=!0,t=!0;for(const s of this.features){if(null==this.template.getExpressionExecutorsForLayer(s.layer)?.editableExpression){e=e&&!0;continue}t=!1;const o=this._lookupEvaluatedExpression(s,"editable");"success"===o?.status?e=e&&!0===o.result:e=!1}return t?null:e}};e([t()],r.prototype,"editable",null),e([t()],r.prototype,"editType",void 0),e([t()],r.prototype,"_evaluatedEditableExpression",null),r=e([s("esri.widgets.BatchAttributeForm.inputs.EditableInput")],r);const i=r;export{i as default};
