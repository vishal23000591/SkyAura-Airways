/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{isFieldInput as i,isGroupInput as o}from"./support/inputUtils.js";let l=class extends e{constructor(t){super(t),this.inputs=[],this.template=null}get allFieldInputs(){const t=[];for(const e of this.inputs)i(e)?t.push(e):o(e)&&t.push(...e.inputs.filter(i));return t}get description(){return this.template?.description??null}get hasInvalidHiddenInputs(){return this.invalidHiddenInputs.length>0}get invalidFeatures(){return Array.from(new Set(this.allFieldInputs.flatMap((t=>t.invalidFeatures))))}get invalidHiddenInputs(){return this.allFieldInputs.filter((t=>!t.valid&&!t.effectiveVisible))}get title(){return this.template?.title??null}get valid(){return this.allFieldInputs.every((t=>t.valid))}};t([r()],l.prototype,"allFieldInputs",null),t([r()],l.prototype,"description",null),t([r()],l.prototype,"inputs",void 0),t([r()],l.prototype,"hasInvalidHiddenInputs",null),t([r()],l.prototype,"invalidFeatures",null),t([r()],l.prototype,"invalidHiddenInputs",null),t([r()],l.prototype,"template",void 0),t([r()],l.prototype,"title",null),t([r()],l.prototype,"valid",null),l=t([s("esri.widgets.BatchAttributeForm.inputs.BatchFormInputs")],l);const p=l;export{p as default};
