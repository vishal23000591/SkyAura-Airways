/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{isGroupElementTemplate as r}from"./support/templateUtils.js";let l=class extends t{constructor(e){super(e),this.description=null,this.preserveFieldValuesWhenHidden=!1,this.title=null}get elementsFlat(){const e=[];for(const t of this.elements)if(e.push(t),r(t))for(const s of t.elements)e.push(s);return e}get elementsInCommon(){const e=this.layers.length;return this.elements.filter((t=>t.layers.length===e))}get layers(){const e=new Set(this.elements.flatMap((e=>e.layers)));return Array.from(e)}getExpressionExecutorsForLayer(e){const t=new Map;for(const s of this.elementsFlat)s.layers.includes(e)&&t.set(s,s.getExpressionExecutorsForLayer(e));return t}};e([s()],l.prototype,"description",void 0),e([s()],l.prototype,"elements",void 0),e([s()],l.prototype,"elementsFlat",null),e([s()],l.prototype,"elementsInCommon",null),e([s()],l.prototype,"layers",null),e([s()],l.prototype,"preserveFieldValuesWhenHidden",void 0),e([s()],l.prototype,"title",void 0),l=e([o("esri.widgets.BatchAttributeForm.templates.BatchFormTemplate")],l);const n=l;export{n as default};
