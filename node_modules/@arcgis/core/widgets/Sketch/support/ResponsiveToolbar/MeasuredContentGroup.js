/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as r}from"../../../../core/accessorSupport/decorators/subclass.js";import s from"../../../Widget.js";import{ToolbarGroupBase as o}from"./ToolbarGroupBase.js";import{onResize as i}from"../../../support/widgetUtils.js";import{tsx as m}from"../../../support/jsxFactory.js";const d=Symbol("on-resize-handle-key");let a=class extends(o(s)){constructor(e){super(e),this._measuredWidth=0,this._measuredHeight=0,this._measuredElement=null}destroy(){this._measuredElement=null}get lengthOptions(){return["horizontal"===this.layout?this._measuredWidth:this._measuredHeight]}render(){return m("div",{afterCreate:e=>{this._measuredElement=e.firstElementChild,this.addHandles(i(this._measuredElement,(()=>{this._measuredWidth=this._measuredElement?.clientWidth??0,this._measuredHeight=this._measuredElement?.clientHeight??0})),d)},afterRemoved:()=>this.removeHandles(d)},this.children)}};e([t()],a.prototype,"_measuredWidth",void 0),e([t()],a.prototype,"_measuredHeight",void 0),e([t()],a.prototype,"lengthOptions",null),e([t()],a.prototype,"_measuredElement",void 0),a=e([r("esri.widgets.Sketch.support.ResponsiveToolbar.MeasuredContentGroup")],a);export{a as default};
