/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import"../core/has.js";import"../core/Logger.js";import{acosClamped as t}from"../core/mathUtils.js";import{fromRotation as r}from"../core/libs/gl-matrix-2/math/mat4.js";import{s as n,f as s,g as o,j as e,l as i,h as a,t as c,d as u,k as f,n as m,i as l,m as g,b as p}from"./vec32.js";import{create as h}from"../core/libs/gl-matrix-2/factories/vec3f64.js";import{e as M,c as j}from"./vec42.js";import{create as d,fromValues as y}from"../core/libs/gl-matrix-2/factories/vec4f64.js";import{getEpsilon as b}from"../core/libs/gl-matrix-2/math/common.js";import{Axis as x}from"../geometry/support/Axis.js";import{fromPoints as v,closestPoint as S}from"../geometry/support/ray.js";import{cartesianToSpherical as q}from"../geometry/support/sphereUtils.js";import{angle as A}from"../geometry/support/vector.js";import{sv3d as P,sm4d as R}from"../geometry/support/vectorStacks.js";const C=E();function E(){return d()}const _=M,k=M;function w(t,r){return j(r,t)}function O(t,r){return y(t[0],t[1],t[2],r)}function T(t){return t}function z(t){t[0]=t[1]=t[2]=t[3]=0}function L(t,r){return t[0]=t[1]=t[2]=0,t[3]=r,t}function N(t){return t[3]}function U(t){return t}function V(t,r,n,s){return y(t,r,n,s)}function Z(t,r,n){return t!==n&&(n[0]=t[0],n[1]=t[1],n[2]=t[2]),n[3]=t[3]+r,n}function B(t,r,n){return t!==n&&w(t,n),n}function D(t,r){return r}function F(t,r,n){if(null==r)return!1;if(!Y(t,r,X))return!1;let{t0:s,t1:o}=X;if((s<0||o<s&&o>0)&&(s=o),s<0)return!1;if(n){const{origin:t,direction:o}=r;n[0]=t[0]+o[0]*s,n[1]=t[1]+o[1]*s,n[2]=t[2]+o[2]*s}return!0}function I(t,r,n){const s=v(r,n);if(!Y(t,s,X))return[];const{origin:o,direction:e}=s,{t0:i,t1:a}=X,c=r=>{const n=h();return p(n,o,e,r),$(t,n,n)};return Math.abs(i-a)<b()?[c(i)]:[c(i),c(a)]}const X={t0:0,t1:0};function Y(t,r,n){const{origin:s,direction:o}=r,e=G;e[0]=s[0]-t[0],e[1]=s[1]-t[1],e[2]=s[2]-t[2];const i=o[0]*o[0]+o[1]*o[1]+o[2]*o[2];if(0===i)return!1;const a=2*(o[0]*e[0]+o[1]*e[1]+o[2]*e[2]),c=a*a-4*i*(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]-t[3]*t[3]);if(c<0)return!1;const u=Math.sqrt(c);return n.t0=(-a-u)/(2*i),n.t1=(-a+u)/(2*i),!0}const G=h();function H(t,r){return F(t,r,null)}function J(t,r,n){if(F(t,r,n))return n;const a=K(t,r,P.get());return s(n,r.origin,o(P.get(),r.direction,e(r.origin,a)/i(r.direction))),n}function K(t,n,s){const e=P.get(),u=R.get();a(e,n.origin,n.direction);const f=N(t);a(s,e,n.origin),o(s,s,1/i(s)*f);const m=rt(t,n.origin),l=A(n.origin,s);return r(u,l+m,e),c(s,s,u),s}function Q(t,r,n,s){const o=N(t),e=o*o,i=r+.5*Math.PI,a=n*n+e-2*Math.cos(i)*n*o,c=Math.sqrt(a),u=a-e;if(u<=0)return.5;const f=Math.sqrt(u),m=Math.acos(f/c)-Math.asin(o/(c/Math.sin(i)));return Math.min(1,(m+.5*s)/s)}function W(t,r,n){return F(t,r,n)?n:(S(r,U(t),n),$(t,n,n))}function $(t,r,n){const e=u(P.get(),r,U(t)),a=o(P.get(),e,t[3]/i(e));return s(n,a,U(t))}function tt(t,r){const n=u(P.get(),r,U(t)),s=f(n),o=t[3]*t[3];return Math.sqrt(Math.abs(s-o))}function rt(r,n){const s=u(P.get(),n,U(r)),o=i(s),e=N(r),a=e+Math.abs(e-o);return t(e/a)}const nt=h();function st(t,r,n,s){const o=u(nt,r,U(t));switch(n){case x.X:{const t=q(o,nt)[2];return l(s,-Math.sin(t),Math.cos(t),0)}case x.Y:{const t=q(o,nt),r=t[1],n=t[2],e=Math.sin(r);return l(s,-e*Math.cos(n),-e*Math.sin(n),Math.cos(r))}case x.Z:return m(s,o);default:return}}function ot(t,r){const n=u(ct,r,U(t));return i(n)-t[3]}function et(t,r,n,e){const i=ot(t,r),a=st(t,r,x.Z,ct),c=o(ct,a,n-i);return s(e,r,c)}function it(t,r){const s=n(U(t),r),o=N(t);return s<=o*o}function at(t,r,n=d()){const s=e(U(t),U(r)),o=t[3],i=r[3];return s+i<o?(j(n,t),n):s+o<i?(j(n,r),n):(g(n,U(t),U(r),(s+i-o)/(2*s)),n[3]=(s+o+i)/2,n)}const ct=h(),ut=E(),ft=Object.freeze(Object.defineProperty({__proto__:null,NullSphere:C,altitudeAt:ot,angleToSilhouette:rt,axisAt:st,cameraFrustumCoverage:Q,clear:z,closestPoint:W,closestPointOnSilhouette:K,containsPoint:it,copy:w,create:E,distanceToSilhouette:tt,elevate:Z,equals:k,exactEquals:_,fromCenterAndRadius:O,fromRadius:L,fromValues:V,getCenter:U,getExtent:D,getRadius:N,intersectLine:I,intersectRay:F,intersectRayClosestSilhouette:J,intersectsRay:H,projectPoint:$,setAltitudeAt:et,setExtent:B,tmpSphere:ut,union:at,wrap:T},Symbol.toStringTag,{value:"Module"}));export{W as A,rt as B,st as C,ot as D,et as E,C as N,U as a,L as b,E as c,Q as d,w as e,V as f,N as g,tt as h,F as i,K as j,H as k,O as l,I as m,_ as n,it as o,$ as p,k as q,z as r,ft as s,ut as t,at as u,Z as v,T as w,B as x,D as y,J as z};
