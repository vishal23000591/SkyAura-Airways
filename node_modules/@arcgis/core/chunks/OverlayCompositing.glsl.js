/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{OverlayIndex as e}from"../views/3d/terrain/interfaces.js";import{ScreenSpacePass as r}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js";import{FloatPassUniform as o}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as s}from"../views/3d/webgl-engine/core/shaderModules/glsl.js";import{IntegerPassUniform as a}from"../views/3d/webgl-engine/core/shaderModules/IntegerPassUniform.js";import{Texture2DPassUniform as t}from"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js";import{NoParameters as i}from"../views/webgl/NoParameters.js";import{ShaderBuilder as n}from"../views/webgl/ShaderBuilder.js";class d extends i{constructor(){super(...arguments),this.overlayIndex=e.INNER,this.opacity=1}}function l(){const e=new n;return e.include(r),e.fragment.uniforms.add(new t("tex",(e=>e.texture))),e.fragment.uniforms.add(new a("overlayIdx",(e=>e.overlayIndex))),e.fragment.uniforms.add(new o("opacity",(e=>e.opacity))),e.fragment.main.add(s`vec2 overlayUV = overlayIdx == 0 ? vec2(uv.x * 0.5, uv.y) : vec2(uv.x * 0.5 + 0.5, uv.y);
fragColor = texture(tex, overlayUV) * opacity;`),e}const m=Object.freeze(Object.defineProperty({__proto__:null,OverlayCompositingPassParameters:d,build:l},Symbol.toStringTag,{value:"Module"}));export{d as O,m as a,l as b};
