/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{copy as t}from"../../core/libs/gl-matrix-2/math/mat4.js";import{i as e,c as n,n as o,h as r,e as i}from"../../chunks/vec32.js";import{create as u}from"../../core/libs/gl-matrix-2/factories/vec3f64.js";import{getReferenceEllipsoid as a}from"../ellipsoidUtils.js";import s from"../SpatialReference.js";import{getSphericalPCPF as c}from"../spatialReferenceEllipsoidUtils.js";import{Axis as l}from"./Axis.js";import{f,b as p}from"../../chunks/boundedPlane.js";import{f as m,s as v}from"../../chunks/sphere.js";function h(t){const{value:e,operations:n}=t;return{operations:n,value:n.create(e)}}function j(t,e,n){return t.operations.setExtent(t.value,e,n.value),n}function d(t,e){return t.operations.getExtent(t.value,e),e}function x(t){return{operations:t,value:t.create()}}function A(t,e,n=x(t)){return n.operations=t,t.copy(e,n.value),n}function b(t){return A(v,m(0,0,0,a(t).radius))}const g=2**50;function P(){return A(p,f([0,0,0],[g,0,0],[0,g,0]))}function R(t,e,n){return t.operations.axisAt(t.value,e,l.Z,n)}function S(t,e,n,o){return t.operations.axisAt(t.value,e,n,o)}function k(t,e,n){return t.operations.intersectRay(t.value,e,n)}function y(t,e,n){return t.operations.closestPoint(t.value,e,n)}function E(t,e,n){return t.operations.intersectRayClosestSilhouette(t.value,e,n)}function C(t,e,n){return t.operations.closestPointOnSilhouette(t.value,e,n)}function U(t,e){return t.operations.distanceToSilhouette(t.value,e)}function G(t,e){return t.operations.altitudeAt(t.value,e)}function O(t,e,n,o){return t.operations.setAltitudeAt(t.value,e,n,o)}function T(n,o,r,i){return o!==i&&t(i,o),e(q,i[12],i[13],i[14]),O(n,q,r,q),i[12]=q[0],i[13]=q[1],i[14]=q[2],i}function Z(t,e,n){return t.operations.elevate(t.value,e,n.value)}const q=u();function w(t,e,n,o,r){return r[0]=i(t,e),r[1]=i(t,n),r[2]=i(t,o),r}function z(t,e,i,u,a){n(i,t),n(D,e),o(D,D),r(u,D,i),r(a,u,i)}function B(t,e){return t?c(e):e.isGeographic?s.PlateCarree:e}const D=u();export{G as altitudeAt,S as axisAt,y as closestPoint,C as closestPointOnSilhouette,z as coordinateSystemFromOneAxisAndNormalVector,h as create,x as createFromOperations,b as createGlobal,P as createLocal,U as distanceToSilhouette,Z as elevate,A as fromValues,d as getExtent,k as intersectRay,E as intersectRayClosestSilhouette,R as normalAt,B as renderSRFromViewSR,O as setAltitudeAt,T as setAltitudeOfTransformation,j as setExtent,w as vectorCoordinates};
