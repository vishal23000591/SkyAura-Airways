/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import o from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{fromRotationTranslationScale as i,invert as e,exactEquals as a}from"../../core/libs/gl-matrix-2/math/mat4.js";import{create as l}from"../../core/libs/gl-matrix-2/factories/mat4f64.js";import{setAxisAngle as n}from"../../core/libs/gl-matrix-2/math/quat.js";import{create as c}from"../../core/libs/gl-matrix-2/factories/quatf64.js";import{create as p,fromArray as m,fromValues as u,clone as h}from"../../core/libs/gl-matrix-2/factories/vec3f64.js";import{fromAxisAndAngle as x,angle as g,angleRad as f,axis as j,up as b}from"./axisAngleDegrees.js";var y;let A=class extends o{static{y=this}constructor(t){super(t),this.translation=p(),this.rotationAxis=m(b),this.rotationAngle=0,this.scale=u(1,1,1)}get rotation(){return x(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=h(j(t)),this.rotationAngle=g(t)}get localMatrix(){const t=l();return n(d,j(this.rotation),f(this.rotation)),i(t,d,this.translation,this.scale),t}get localMatrixInverse(){return e(l(),this.localMatrix)}equals(t){return this===t||null!=t&&a(this.localMatrix,t.localMatrix)}clone(){const t={translation:h(this.translation),rotationAxis:h(this.rotationAxis),rotationAngle:this.rotationAngle,scale:h(this.scale)};return new y(t)}};t([r({type:[Number],nonNullable:!0,json:{write:!0}})],A.prototype,"translation",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],A.prototype,"rotationAxis",void 0),t([r({type:Number,nonNullable:!0,json:{write:!0}})],A.prototype,"rotationAngle",void 0),t([r({type:[Number],nonNullable:!0,json:{write:!0}})],A.prototype,"scale",void 0),t([r()],A.prototype,"rotation",null),t([r()],A.prototype,"localMatrix",null),t([r()],A.prototype,"localMatrixInverse",null),A=y=t([s("esri.geometry.support.MeshTransform")],A);const d=c();export{A as default};
