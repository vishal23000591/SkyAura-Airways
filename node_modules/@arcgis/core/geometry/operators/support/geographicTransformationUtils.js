/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{l as n,i as t,p as o}from"../../../chunks/pe.js";import e from"./GeographicTransformation.js";import r from"./GeographicTransformationStep.js";let s,i,a,c;function p(){return!!s&&t()}async function m(){if(!p()){const[t,e,r,p]=await Promise.all([import("../../../chunks/Envelope2D.js"),import("../../../chunks/ProjectionTransformation.js").then((n=>n.aK)).then((({queryTransformationList:n})=>n)),import("../../../chunks/ProjectionTransformation.js").then((n=>n.aG)).then((({injectPe:n})=>n)),import("./apiConverter.js"),n()]);c=t.Envelope2D.constructEmpty(),s=e,r(o),i=p.fromExtent,a=p.fromSpatialReference}}function u(n,t,o=null){const e=o?i(o).asEnvelope2D():c,r=s(0,a(n),a(t),e,1,!0);return r.length>0?l(r[0]):null}function f(n,t,o=null){const e=o?i(o).asEnvelope2D():c;return s(0,a(n),a(t),e,0,!0).map((n=>l(n)))}function l(n){const t=new e;for(let o=0;o<n.count();o++){const e=n.getStep(o);t.steps.push(new r({wkid:e.getID(),isInverse:e.isInverted()}))}return t}export{u as getTransformation,f as getTransformations,p as isLoaded,m as load};
