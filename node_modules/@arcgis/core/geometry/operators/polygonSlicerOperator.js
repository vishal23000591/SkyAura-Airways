/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{areaUnitFromSpatialReference as r,convertUnit as t,getMetersPerUnitForSR as n}from"../../core/unitUtils.js";import{supportsCurves as o,findSlicesByArea as s,recursiveSliceEqualArea as a,sliceIntoStrips as e}from"./gx/operatorPolygonSlicer.js";import{getSpatialReference as i,fromSpatialReference as u,fromPolygon as c,toPolygon as f}from"./support/apiConverter.js";function l(o,a,e,f={}){const{transform:l,unit:m}=f,p=i(o);if(e&&m){if(p.isGeographic)throw new Error("Unable to convert from an angular area unit to a linear area unit.");const o=r(p);o!==m&&(o?e=t(e,m,o):(e=t(e,m,"square-meters"),e=Math.sqrt(e),e/=n(p),e**=2))}return s(c(o),u(p),a,e,l?.transform??null)}function m(r,t,n={}){const{transform:o}=n,s=i(r);return a(c(r),u(s),t,o?.transform??null).map((r=>f(r,s)))}function p(r,t,n={}){const{transform:o}=n,s=i(r);return e(c(r),u(s),t,o?.transform??null).map((r=>f(r,s)))}const g=o();export{l as findSlicesByArea,m as recursiveSliceEqualArea,p as sliceIntoStrips,g as supportsCurves};
