/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{clone as r}from"../../core/lang.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as o}from"../../core/accessorSupport/decorators/subclass.js";import{writer as s}from"../../core/accessorSupport/decorators/writer.js";import{getJsonType as i,fromJSON as p}from"../../geometry/support/jsonUtils.js";import{geometryTypes as m}from"../../geometry/support/typeUtils.js";import a from"./BaseImageMeasureParameters.js";import{measureOperationJSONMap as n}from"./imageMeasureUtils.js";var c;let u=c=class extends a{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,r,t){null!=e&&(r.geometryType=i(e),r[t]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:r}=this;return"point"===r.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new c(r({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};e([t({types:m,json:{name:"fromGeometry",read:p}})],u.prototype,"geometry",void 0),e([s("geometry")],u.prototype,"writeGeometry",null),e([t({type:n.apiValues,json:{read:n.read,write:n.write}})],u.prototype,"measureOperation",null),e([t({json:{read:!0}})],u.prototype,"is3D",void 0),u=c=e([o("esri.rest.support.ImagePointParameters")],u);export{u as default};
