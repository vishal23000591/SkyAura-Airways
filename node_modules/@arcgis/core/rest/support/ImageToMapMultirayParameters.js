/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import r from"../../core/Clonable.js";import o from"../../core/JSONSupport.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{Integer as s}from"../../core/accessorSupport/ensureType.js";import"../../core/has.js";import"../../core/RandomLCG.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import{writer as i}from"../../core/accessorSupport/decorators/writer.js";import m from"../../geometry/SpatialReference.js";import{getJsonType as a}from"../../geometry/support/jsonUtils.js";import{geometryTypes as c}from"../../geometry/support/typeUtils.js";let l=class extends(r.ClonableMixin(o)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,r,o){r.geometries=e?.length?{geometryType:a(e[0]),geometries:e.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};e([t({types:[c]})],l.prototype,"geometries",void 0),e([i("geometries")],l.prototype,"writeGeometries",null),e([t({type:[s],json:{write:!0}})],l.prototype,"rasterIds",void 0),e([t({type:m,json:{name:"outSR",write:!0}})],l.prototype,"outSpatialReference",void 0),l=e([p("esri.rest.support.ImageToMapMultirayParameters")],l);export{l as default};
