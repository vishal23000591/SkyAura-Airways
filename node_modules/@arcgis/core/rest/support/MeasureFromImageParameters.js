/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import e from"../../core/JSONSupport.js";import{clone as o}from"../../core/lang.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import{writer as p}from"../../core/accessorSupport/decorators/writer.js";import{getJsonType as m,fromJSON as i}from"../../geometry/support/jsonUtils.js";import{geometryTypes as a}from"../../geometry/support/typeUtils.js";var c;let y=c=class extends e{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(r,e,o){null!=r&&(e.geometryType=m(r),e[o]={...r.toJSON(),spatialReference:void 0})}clone(){const r=o({geometry:this.geometry,rasterId:this.rasterId});return new c(r)}};r([t({types:a,json:{name:"fromGeometry",read:i,write:!0}})],y.prototype,"geometry",void 0),r([p("geometry")],y.prototype,"writeGeometry",null),r([t({json:{write:!0}})],y.prototype,"rasterId",void 0),y=c=r([s("esri.rest.support.MeasureFromImageParameters")],y);export{y as default};
