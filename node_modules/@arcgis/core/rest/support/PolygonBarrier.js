/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import r from"../../PopupTemplate.js";import o from"../../core/Clonable.js";import s from"../../core/JSONSupport.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../core/accessorSupport/decorators/writer.js";import m from"../../geometry/Polygon.js";import{getPrefixedProperties as c,setPrefixedProperties as u,toKebabImpedanceAttributes as n,fromKebabImpedanceAttributes as y}from"../route/utils.js";import{barrierTypeJsonMap as b}from"./networkEnums.js";import{symbolTypes as d}from"../../symbols/support/typeUtils.js";var j;let h=class extends(o.ClonableMixin(s)){static{j=this}constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(t,e){return c(e.attributes,"Attr_")}writeCosts(t,e){u(t,e,"Attr_")}static{this.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}]}static fromGraphic(t){return new j({barrierType:null!=t.attributes.BarrierType?b.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?n(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:this.barrierType?b.toJSON(this.barrierType):null,Costs:this.costs?JSON.stringify(y(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new e({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};t([p({type:b.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.read},write:{writer:b.write}}})],h.prototype,"barrierType",void 0),t([p()],h.prototype,"costs",void 0),t([i("costs",["attributes"])],h.prototype,"readCosts",null),t([l("costs")],h.prototype,"writeCosts",null),t([p({type:m,json:{write:!0}})],h.prototype,"geometry",void 0),t([p({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),t([p({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),t([p({type:r})],h.prototype,"popupTemplate",void 0),t([p()],h.prototype,"scaleFactor",void 0),t([p({types:d})],h.prototype,"symbol",void 0),t([p({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=j=t([a("esri.rest.support.PolygonBarrier")],h);export{h as default};
