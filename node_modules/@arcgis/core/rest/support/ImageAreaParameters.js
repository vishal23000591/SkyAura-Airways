/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{clone as r}from"../../core/lang.js";import{lengthUnitsJSONMap as t,areaUnitsJSONMap as o}from"../../core/unitUtils.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";import{getJsonType as p}from"../../geometry/support/jsonUtils.js";import{geometryTypes as m}from"../../geometry/support/typeUtils.js";import n from"./BaseImageMeasureParameters.js";import{measureOperationJSONMap as l}from"./imageMeasureUtils.js";var u;let y=u=class extends n{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,r,t){null!=e&&(r.geometryType=p(e),r[t]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new u(r({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};e([s({types:m,json:{name:"fromGeometry",read:!0,write:!0}})],y.prototype,"geometry",void 0),e([a("geometry")],y.prototype,"writeGeometry",null),e([s({type:l.apiValues,json:{write:l.write}})],y.prototype,"measureOperation",null),e([s({json:{read:!0}})],y.prototype,"is3D",void 0),e([s({type:String,json:{read:t.read,write:t.write}})],y.prototype,"linearUnit",void 0),e([s({type:String,json:{read:o.read,write:o.write}})],y.prototype,"areaUnit",void 0),y=u=e([i("esri.rest.support.ImageAreaParameters")],y);export{y as default};
