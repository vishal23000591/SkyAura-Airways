/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import o from"../../../core/JSONSupport.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{ensureClass as e}from"../../../core/accessorSupport/ensureType.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as s}from"../../../core/accessorSupport/decorators/writer.js";import p from"../../../geometry/SpatialReference.js";import{traceTypeKebabDict as a}from"../../../networks/support/typeUtils.js";import n from"../../../networks/support/UNTraceConfiguration.js";import c from"./TraceLocation.js";var l;let u=l=class extends o{static from(t){return e(l,t)}constructor(t){super(t),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}writeOutSR(t,o,r){if(null!=t){const{wkid:e,latestWkid:i,wkt:s,wkt2:p}=t;o[r]=JSON.stringify({wkid:e??void 0,latestWkid:i??void 0,wkt:s??void 0,wkt2:p??void 0})}}};t([r({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],u.prototype,"namedTraceConfigurationGlobalId",void 0),t([r({type:String,json:{write:!0}})],u.prototype,"gdbVersion",void 0),t([r({type:[c],json:{write:!0}})],u.prototype,"traceLocations",void 0),t([r({type:Date,json:{type:Number,write:{writer:(t,o)=>{o.moment=t?t.getTime():null}}}})],u.prototype,"moment",void 0),t([r({type:p,json:{write:{allowNull:!0,target:"outSR"}}})],u.prototype,"outSpatialReference",void 0),t([s("outSpatialReference")],u.prototype,"writeOutSR",null),t([r({type:n,json:{write:!0}})],u.prototype,"traceConfiguration",void 0),t([r({type:[Object],json:{write:!0}})],u.prototype,"resultTypes",void 0),t([r({type:a.apiValues,json:{type:a.jsonValues,read:a.read,write:a.write}})],u.prototype,"traceType",void 0),u=l=t([i("esri.rest.networks.support.TraceParameters")],u);const m=u;export{m as default};
