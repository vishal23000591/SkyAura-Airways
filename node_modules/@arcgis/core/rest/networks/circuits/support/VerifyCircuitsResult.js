/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import r from"../../../../core/JSONSupport.js";import{property as t}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{reader as o}from"../../../../core/accessorSupport/decorators/reader.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import i from"./CircuitVerifyResult.js";import{handleServiceEdits as p}from"../../support/utils.js";let c=class extends r{constructor(e){super(e),this.circuits=[],this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,r){return p(e)}};e([t({type:[i],json:{type:[i],write:!0}})],c.prototype,"circuits",void 0),e([t({type:Date,json:{type:Number,write:{writer:(e,r)=>{r.moment=e?e.getTime():null}}}})],c.prototype,"moment",void 0),e([t({type:Boolean,json:{type:Boolean,write:!0}})],c.prototype,"exceededTransferLimit",void 0),e([t({type:[Object],json:{type:[Object],write:!0}})],c.prototype,"serviceEdits",void 0),e([o("serviceEdits")],c.prototype,"readServiceEdits",null),c=e([s("esri.rest.networks.circuits.support.VerifyCircuitsResult")],c);export{c as default};
