/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../core/arrayUtils.js";import{throwIfAborted as t}from"../../../../core/promiseUtils.js";import{CodedValue as n}from"../../../../layers/support/CodedValue.js";import"../../../../core/has.js";import l from"../../../../layers/support/CodedValueDomain.js";import"../../../../layers/support/Domain.js";import"../../../../layers/support/InheritedDomain.js";import"../../../../layers/support/RangeDomain.js";import i from"../../../../layers/support/Field.js";import{isStringField as o,isTimeOnlyField as a}from"../../../../layers/support/fieldUtils.js";import r from"../../../../rest/support/StatisticDefinition.js";import{noDominantCategoryField as s}from"../../../statistics/support/predominanceUtils.js";import{getRangeExpr as u,getSQLFilterForNormalization as c,mergeWhereClauses as m}from"../../../statistics/support/utils.js";import{isIntegerField as f,isAnyDateField as p,getDateDiffSQL as d,castIntegerFieldToFloat as y}from"../../utils.js";import{isNullCountSupported as g,statisticTypes as x,getEqualIntervalBins as v,processNullValue as h}from"../../../../statistics/utils.js";const F=/_value$/i,w=Math.LOG10E,E={SECOND:1e3,MINUTE:6e4,HOUR:36e5},S=10;function T(e){return e.map((e=>e.toJSON()))}function V(e,t){const n=[],l=e.layer,i="featureReduction"in l?l.featureReduction:null,o="binning"===i?.type,a=null!=i&&"fields"in i?i.fields?.map((e=>e.name?.toLowerCase())).filter(Boolean):[];if(!o||!t)return n;for(const r of t)a.includes(r.toLowerCase())||n.push(r);return n}function z(e,t,n){const l=[];if(t)for(const i of t){const t=e.getField(i);t&&n&&"availableFields"in n&&!n.availableFields?.includes(t.name)&&l.push(t.name)}return l}function $(e,t){const n=e&&e.features;if(0===n?.length)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const l=n?.[0]?.attributes,i={};for(const o in l)i[o.replace(F,"").toLowerCase()]=l[o];return null!=i.totalcount&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&null!=i.min&&null==i.stddev&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach((e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))})),i.min===i.max&&null!=i.min&&(i.avg=i.min,i.stddev=i.variance=0)),i}function C(e){const t=[],n=e.classBreaks,l=n[0].minValue,i=n[n.length-1].maxValue;n.forEach((e=>{t.push([e.minValue,e.maxValue])}));const o={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:l,max:i,intervals:t,sqlExpr:j(o),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function j(e){const{field:t,normalizationType:n,normalizationField:l,normalizationTotal:i,layer:o}=e,a=f(o,t);let r=t;return"percent-of-total"===n?r=`((${a?y(t):t} / ${i}) * 100)`:"log"===n?r=`(log(${t}) * ${w})`:"field"===n?r=`(${a?y(t):t} / ${l})`:"natural-log"===n?r=`(log(${a?y(t):t}))`:"square-root"===n&&(r=`(power(${a?y(t):t}, 0.5))`),r}function q(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()!==t){n=e[l];break}return n}function b(e,t){let n;if(t=t.toLowerCase(),e)for(const l in e)if(l.toLowerCase()===t){n=e[l];break}return n}function O(e,t,n,l,i){const o={},a="countOFExpr";e&&e.features&&e.features.forEach((e=>{const t=e.attributes,n=q(t,a),l=b(t,a);null!=n&&null!=l&&0!==n&&(o[n]=l)}));const r=[];return v(t,n,l).forEach(((e,t)=>{const n=(t+1).toString();r.push({minValue:e[0],maxValue:e[1],count:o.hasOwnProperty(n)?o[n]:0})})),{bins:r,minValue:t,maxValue:n,normalizationTotal:i}}async function L(e,n){const l=e&&e.features,{field:i,field2:o,field3:a,fieldDelimiter:r,layer:s,view:u,signal:c,labels:m}=n,f=`countOF${!(!i||!o)?"Expr":i||"Expr"}`,p={};let d=!1;for(const t of l){const e=t.attributes,n=b(e,f);let l=i?b(e,i):q(e,f),s=o?b(e,o):null,u=a?b(e,a):null;null===l&&0===n&&(d=!0),(null==l||"string"==typeof l&&""===l.trim())&&(l=null),o&&(null==s||"string"==typeof s&&""===s.trim())&&(s=null),a&&(null==u||"string"==typeof u&&""===u.trim())&&(u=null);let c=l;o&&(c=`${h(c)}${r}${h(s)}`,a&&(c=`${c}${r}${h(u)}`)),null==p[c]?p[c]={count:n,data:c}:p[c].count=p[c].count+n}if(i&&d){const e=i+" is NULL";try{const t=await s.queryFeatureCount({whereClause:e,view:u,signal:c});return p.null.count=p.null.count+t,R(p,m)}catch{return t(c),R(p,m)}}return R(p,m)}function R(e,t){if(t)for(const n in e)e[n].label=t[n];return{count:e}}async function D(e,t,i){const o=e?i.getField(e):null,a=o?i.getFieldDomain(o.name):null;if(a)return a;const{uniqueValueInfos:r}=await i.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),s=r.map((e=>new n({code:e.value})));return new l({codedValues:s})}async function I(e,t){if(!e.returnAllCodedValues)return[];const{field:n,field2:l,field3:i}=e;if(n&&!l){const e=n?t.getField(n):null,l=e?t.getFieldDomain(e.name):null;return l?[l]:[]}const o=[];return n&&(o.push(D(n,e,t)),l&&(o.push(D(l,e,t)),i&&o.push(D(i,e,t)))),Promise.all(o)}function N(e,t){return d(e,new Date(0),t,"milliseconds").sqlExpression}function U(e,t){return`EXTRACT(${t} FROM ${e}) * ${E[t]}`}function M(e){if(!e)return null;return y(["HOUR","MINUTE","SECOND"].map((t=>`(${U(e,t)})`)).join(" + "))}function B(e){return{viewingMode:"2d"===e.type?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Q(e,t){const n=new Set(e.map((e=>e.value))),l=t.filter((e=>!n.has(e)));for(const i of l)e.push({value:i,count:0});e.sort(((e,n)=>t.indexOf(e.value)-t.indexOf(n.value)));for(const i of e)i.value===s&&(i.value=null);return{predominantCategoryInfos:e}}function P(t){const n="featureReduction"in t?t.featureReduction:null;return((null!=n&&"fields"in n?n.fields:null)??[]).map((e=>{const n=W(e,t.fieldsIndex);return n?new i({type:n,name:e.name,alias:e.alias}):null})).filter(e)}function W(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?"string"===e.onStatisticExpression.returnType?"string":"double":null;default:return null}}function _(e,t){return p(t)?N(e,t?.name):a(t)?M(t?.name):null}function k(e,t,n,l=!0){const{field:i,normalizationType:a,normalizationField:s,normalizationTotal:f,minValue:p,maxValue:d,filter:y}=t,v=e.supportsSQLExpression?_(e,n)||t.sqlExpression:null,h=j({field:i,normalizationType:a,normalizationField:s,normalizationTotal:f,layer:e}),F=v||h,w=F?u(F,p,d):null,E=c({field:i,normalizationField:s,normalizationType:a}),S=m(t.sqlWhere,E),T=m(S,w),V=g({normalizationField:s,normalizationType:a,sqlExpression:v,supportsSQLExpression:e.supportsSQLExpression,minValue:p,maxValue:d}),z=o(e.getField(i??void 0)),{include:$,exclude:C}=t.outStatisticTypes||{},q=x.filter((e=>(!$||$.includes(e))&&(!C||!C.includes(e))&&("nullcount"===e?V:!z||"count"===e)&&("median"!==e||l))),b=e.createQuery();return b.where=m(b.where,T),b.sqlFormat=v?"standard":null,b.outStatistics=q.map((t=>{const n=new r;let l=null,i=null,o=`${t}_value`;if("variance"===t)l="var",i=F;else if("nullcount"===t){const t=e.objectIdField;l="count",i=t&&e.getField(t)?t:"1",o="totalcount_value"}else"median"===t?(l="percentile-continuous",i=F,n.statisticParameters={value:.5}):(l=t,i=F);return n.statisticType=l,n.onStatisticField=i,n.outStatisticFieldName=o,n})),A(b,y),b}function A(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function H(e,t){const{field:n,field2:l,field3:i,sqlExpression:o}=t,a=!(!n||!l),r=e.createQuery();return r.where=m(r.where,t.sqlWhere),r.sqlFormat=o?"standard":null,r.outStatistics=[J(a?null:n,a?"1":o)].filter(Boolean),r.groupByFieldsForStatistics=[n||o,l,i].filter(Boolean),A(r,t.filter),r}function J(e,t){const n="countOF"+(e||"Expr"),l=new r;return l.statisticType="count",l.onStatisticField=t?"1":e,l.outStatisticFieldName=n,l}function Z(e,t,n,l=S,i,o,a){const{min:r,max:s,normTotal:u,excludeZerosExpr:c}=t,m=t.intervals||v(r,s,l),f=t.sqlExpr||n;return G(e,m,f,c,i,o,a).then((e=>({bins:e.map(((e,t)=>({minValue:m[t][0],maxValue:m[t][1],count:"fulfilled"===e.status?e.value:0}))),minValue:r,maxValue:s,normalizationTotal:u})))}function G(e,t,n,l,i,o,a){const r=[],s=t.length;for(let u=0;u<s;u++){const e=m(l,m(n+" >= "+t[u][0],null!==t[u][1]?n+(u===s-1?" <= ":" < ")+t[u][1]:""));r.push(e)}return Promise.allSettled(r.map((t=>e.queryFeatureCount({whereClause:t,view:i,filter:o,signal:a}))))}export{S as defaultNumBins,T as ensureFeaturesJSON,C as generateBinParams,W as getAggregateFieldType,Z as getBins,I as getDomainsForFields,P as getFeatureReductionFields,j as getFieldExpr,O as getHistogramFromFeatureSet,z as getMissingFields,V as getMissingFieldsForBinning,Q as getPredominantCategoriesFromUVInfos,_ as getSQLExpressionForDateOrTimeField,$ as getSummaryStatisticsFromFeatureSet,k as getSummaryStatsQuery,H as getUVQuery,L as getUniqueValuesFromFeatureSet,B as getViewInfoParams,M as msForTimeOnlyFieldSQL,N as msSinceUnixEpochSQL,A as updateQueryWithFeatureFilter};
