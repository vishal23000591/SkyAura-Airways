/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{ArcadeDate as t}from"./ArcadeDate.js";import{deepClone as e}from"./deepClone.js";import{ArcadeExecutionError as s,ExecutionErrorCodes as r}from"./executionError.js";import{i,c as n,a as o,b as a,d as u,e as l,f as c,g as f,h as b}from"../chunks/languageUtils.js";import h from"../geometry/Geometry.js";import{isNumber as m,isBoolean as d,isString as w,isArray as y}from"../support/guards.js";function p(t,e,s=!1,r=!1){if(null==t)return null;if(m(t)||d(t)||w(t)||l(t)||c(t)||f(t))return t;if(y(t)){const i=[];for(const n of t)i.push(p(n,e,s,r));return i}if(r&&b(t))return t;const i=new j;i.immutable=!1;for(const[n,o]of Object.entries(t))void 0!==o&&i.setField(n,p(o,e,s,r));return i.immutable=s,i}class j{constructor(t){this.declaredClass="esri.arcade.Dictionary",this.plain=!1,this.immutable=!0,t instanceof j?this.attributes=t.attributes:null==t?this.attributes=Object.create(null):null!=Object.getPrototypeOf(t)?this.attributes={__proto__:null,...t}:this.attributes=t}static containerEntry(t,e){return new j({__proto__:null,key:t,value:e})}static textFormatting(){const t=new j({__proto__:null,newline:"\n",tab:"\t",singlequote:"'",doublequote:'"',forwardslash:"/",backwardslash:"\\"});return t.immutable=!1,t}field(t){const e=t.toLowerCase(),i=this.attributes[t];if(void 0!==i)return i;for(const s in this.attributes)if(s.toLowerCase()===e)return this.attributes[s];throw new s(null,r.FieldNotFound,null,{key:t})}setField(e,n){if(this.immutable)throw new s(null,r.Immutable,null);if(i(n))throw new s(null,r.NoFunctionInDictionary,null);const o=e.toLowerCase();n instanceof Date&&(n=t.dateJSToArcadeDate(n));if(void 0===this.attributes[e]){for(const t in this.attributes)if(t.toLowerCase()===o)return void(this.attributes[t]=n);this.attributes[e]=n}else this.attributes[e]=n}hasField(t){const e=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const s in this.attributes)if(s.toLowerCase()===e)return!0;return!1}keys(){let t=[];for(const e in this.attributes)t.push(e);return t=t.sort(),t}castToText(t=!1){return n(this.attributes,{useNumbersForDates:t})}static convertObjectToArcadeDictionary(t,e,s=!0,r=!1){const i=new j;i.immutable=!1;for(const n in t){const o=t[n];void 0!==o&&i.setField(n.toString(),p(o,e,s,r))}return i.immutable=s,i}static convertJsonToArcade(t,e,s=!1,r=!1){return p(t,e,s,r)}castAsJson(t=null){const e=Object.create(null);for(let s in this.attributes){const r=this.attributes[s];void 0!==r&&(t?.keyTranslate&&(s=t.keyTranslate(s)),e[s]=o(r,t))}return e}async castDictionaryValueAsJsonAsync(t,e,s,r=null,i){const n=await a(s,r,i);return t[e]=n,n}async castAsJsonAsync(e=null,s=null){const r=Object.create(null),i=[];for(let n in this.attributes){const a=this.attributes[n];s?.keyTranslate&&(n=s.keyTranslate(n)),void 0!==a&&(u(a)||a instanceof h||a instanceof t?r[n]=o(a,s):i.push(this.castDictionaryValueAsJsonAsync(r,n,a,e,s)))}return i.length>0&&await Promise.all(i),r}deepClone(){const t=new j;t.immutable=!1;for(const s of this.keys())t.setField(s,e(this.field(s)));return t}}export{j as default};
