/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../../../../../../chunks/tslib.es6.js";import{define as o,option as e,uniform as a,UniformGroup as i}from"../../../../GraphShaderModule.js";import{texture2D as r,Vec3 as s,Sampler2D as n,Float as p,Mat3 as u}from"../../../../graph/glsl.js";class g extends i{}t([a(n)],g.prototype,"image1",void 0),t([a(p)],g.prototype,"image1Const",void 0),t([a(u)],g.prototype,"imageSwap",void 0);class l extends i{}t([a(n)],l.prototype,"image1",void 0),t([a(n)],l.prototype,"image2",void 0),t([a(p)],l.prototype,"image1Const",void 0),t([a(p)],l.prototype,"image2Const",void 0),t([a(u)],l.prototype,"imageSwap",void 0);const m=a=>{class i extends a{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(t){const{imageCount:o}=this;if(1===o){const o=r(this.config.texture,t);return{a:o.r,b:o.g,c:o.b,alpha:o.a}}if(2===o){const o=this._getTwoValues(t);return{a:o.a,b:o.b,c:o.b,alpha:o.alpha}}return this._getThreeValues(t)}_getTwoValues(t){const o=r(this.config.texture,t);if(1===this.constantCount){const{imageSwap:t,image1Const:e}=this.twoRasterConfig,a=t.multiply(new s(o.r,e,0));return{a:a.x,b:a.y,alpha:o.a}}const{image1:e}=this.twoRasterConfig,a=r(e,t);return{a:o.r,b:a.r,alpha:o.a.multiply(a.a)}}_getThreeValues(t){const o=r(this.config.texture,t),{imageSwap:e,image1:a,image2:i,image1Const:n,image2Const:p}=this.threeRasterConfig;if(2===this.constantCount){const t=e.multiply(new s(o.r,n,p));return{a:t.x,b:t.y,c:t.z,alpha:o.a}}if(1===this.constantCount){const i=r(a,t),p=e.multiply(new s(o.r,i.r,n));return{a:p.x,b:p.y,c:p.z,alpha:o.a.multiply(i.a)}}const u=r(a,t),g=r(i,t);return{a:o.r,b:u.r,c:g.r,alpha:o.a.multiply(u.a).multiply(g.a)}}}return t([o],i.prototype,"constantCount",void 0),t([o],i.prototype,"imageCount",void 0),t([e(g)],i.prototype,"twoRasterConfig",void 0),t([e(l)],i.prototype,"threeRasterConfig",void 0),i};export{m as MultiRasterMixin};
