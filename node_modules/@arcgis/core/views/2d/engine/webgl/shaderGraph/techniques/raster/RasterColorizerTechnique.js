/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{Technique as e}from"../Technique.js";import{RasterTechniqueType as t}from"../TechniqueType.js";import{RasterColorizerLUTShader as o}from"../shaders/raster/RasterColorizerLUTShader.js";import{RasterColorizerShadedReliefShader as i}from"../shaders/raster/RasterColorizerShadedReliefShader.js";import{RasterColorizerStretchShader as r}from"../shaders/raster/RasterColorizerStretchShader.js";import{StencilOperation as s,CompareFunction as n}from"../../../../../../webgl/enums.js";class a extends e{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=t.RasterColorizer,this.shaders={lut:new o,stretch:new r,shadedRelief:new i}}render(e,t){for(const o of t.bitmaps){if(!o.source||o.suspended)continue;e.timeline.begin(this.name);const{painter:t}=e;t.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:o.stencilRef,compare:n.EQUAL,op:{fail:s.KEEP,zFail:s.KEEP,zPass:s.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),o.updateTexture(e),o.processedTexture||o.updateProcessedTexture();const{type:i}=o.symbolizerParameters,r="stretch"===i?this._getStretchOptions(o):"lut"===i?this._getLutOptions(o):this._getShadedReliefOptions(o);"bilinear"!==o.interpolation||e.context.capabilities.textureFloatLinear||(r.defines.bilinear=!0),t.submitDrawMesh(e.context,r,t.quadMesh),e.timeline.end(this.name)}}_getLutOptions(e){const{config:t,projectionConfig:o,colormapConfig:i,pixelMaskConfig:r,projectionDefines:s}=this._getCommonConfig(e),n=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:o,config:t,colormapConfig:i,pixelMaskConfig:r},defines:{...s,...n,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(e){const t=e.symbolizerParameters,{config:o,projectionConfig:i,colormapConfig:r,pixelMaskConfig:s,projectionDefines:n}=this._getCommonConfig(e),a=this._getInterpolationDefines(e.interpolation,1===t.bandCount);return{shader:this.shaders.stretch,uniforms:{projectionConfig:i,config:o,stretchConfig:t,colormapConfig:r,pixelMaskConfig:s},defines:{...n,...a,isMultiband:t.bandCount>1,applyColormap:!!r,useGamma:t.useGamma,noOp:e.isRendereredSource&&!e.processed,applyPixelMask:!!s},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(e){const t=e.symbolizerParameters,{config:o,projectionConfig:i,colormapConfig:r,pixelMaskConfig:s,projectionDefines:n}=this._getCommonConfig(e),a=this._getInterpolationDefines(e.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:i,config:o,hillshadeConfig:t,colormapConfig:r,pixelMaskConfig:s},defines:{...n,...a,isMultidirectional:t.hillshadeType>0,applyColormap:!!r,applyPixelMask:!!s},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(e){const{coordScale:t,computedOpacity:o,transforms:i}=e,{names:r,textures:s}=e.getTextures({useProcessedTexture:e.processed}),n=s[r.indexOf("u_image")],a=e.getRasterTextureSize(),p={texture:{texture:n,unit:0},dvsMat3:i.displayViewScreenMat3,coordScale:t,srcImageSize:a,opacity:o},l=s[r.indexOf("u_transformGrid")],{transformGrid:c}=e,f=!(!l||!c),m=f?{transformTexture:{texture:l,unit:2},targetImageSize:[e.width,e.height],transformSpacing:c.spacing,transformGridSize:c.size}:void 0,u=s[r.indexOf("u_colormap")],{colormap:d,colormapOffset:g}=e.symbolizerParameters,h=u&&d?{colormapTexture:{texture:u,unit:1},colormapOffset:g??0,colormapMaxIndex:d.length/4-1}:void 0,C=s[r.indexOf("u_mask")];return{config:p,projectionConfig:m,colormapConfig:h,pixelMaskConfig:C?{maskTexture:{texture:C,unit:3}}:void 0,projectionDefines:{applyProjection:f,lookupProjection:f&&1===c.spacing[0]}}}_getInterpolationDefines(e,t){const o="bilinear"===e&&t;return{bilinear:o,bicubic:"cubic"===e,nearestOnEdge:o}}}export{a as RasterColorizerTechnique};
