/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{pt2px as t}from"../../../../../../../core/screenUtils.js";import{Alignment as e}from"../../../../../../../symbols/cim/enums.js";import{applyParentTransform as i}from"../../../../../../../symbols/cim/utils.js";import{spritePadding as o}from"../../../definitions.js";class s{static from(t){return"width"in t?this.fromSimpleMeshParams(t):this.fromComplexMeshParams(t)}static fromSimpleMeshParams(e){const i=new s(e.sprite,e.color,e.outlineColor,e.minPixelBuffer,e.placement,e.scaleInfo,e.effects),{type:o,width:h,height:r,angle:n,alignment:c,outlineSize:a,referenceSize:f,sprite:l,overrideOutlineColor:m}=e;return i.rawWidth=t(h),i.rawHeight=t(r),i.angle=n,i.alignment=c,i.outlineSize=t(a),i.referenceSize=t(f),i.overrideOutlineColor=m,i.offsetX=t(e.offsetX),i.offsetY=t(e.offsetY),"simple"!==o||l.sdf||(i.rawWidth=l.width,i.rawHeight=l.height),i._computeSize(e,!1),i}static fromComplexMeshParams(e){const o=new s(e.sprite,e.color,e.outlineColor,e.minPixelBuffer,e.placement,e.scaleInfo,e.effects);let{alignment:h,transforms:r,size:n,scaleX:c,anchorX:a,anchorY:f,angle:l,colorLocked:m,frameHeight:d,widthRatio:u,offsetX:p,offsetY:g,outlineSize:x,referenceSize:w,scaleFactor:z,sizeRatio:S,isAbsoluteAnchorPoint:X,rotateClockwise:Y,scaleSymbolsProportionally:C,sprite:H}=e;if(r&&r.infos.length>0){const t=i(n,l,Y,p,g,r);n=t.size,l=t.rotation,p=t.offsetX,g=t.offsetY,Y=!1}z&&(n*=z,p*=z,g*=z);const M=c*(H.width/H.height);o.alignment=h,o.rawHeight=t(n),o.rawWidth=o.rawHeight*M,o.referenceSize=t(w),o.sizeRatio=S,o.sdfDecodeCoeff=(H.sdfDecodeCoeff??1)*S,o.angle=l,o.rotateClockwise=Y,o.anchorX=a,o.anchorY=f,o.offsetX=t(p),o.offsetY=t(g),X&&n&&(H.sdf?o.anchorX=a/(n*u):o.anchorX=a/(n*M),o.anchorY=f/n);const W=C&&d?n/d:1;return o.outlineSize=0===x||isNaN(x)?0:t(x)*W,o.scaleSymbolsProportionally=C,o.colorLocked=m,o._computeSize(e,!0),o}constructor(t,i,o,s,h,r,n){this.sprite=t,this.color=i,this.outlineColor=o,this.minPixelBuffer=s,this.placement=h,this.scaleInfo=r,this.effects=n,this.rawWidth=0,this.rawHeight=0,this.angle=0,this.outlineSize=0,this.referenceSize=0,this.sizeRatio=1,this.sdfDecodeCoeff=1,this.alignment=e.SCREEN,this.scaleSymbolsProportionally=!1,this.overrideOutlineColor=!1,this.colorLocked=!1,this.anchorX=0,this.anchorY=0,this.computedWidth=0,this.computedHeight=0,this.texXmin=0,this.texYmin=0,this.texXmax=0,this.texYmax=0,this.offsetX=0,this.offsetY=0,this.rotateClockwise=!0}get boundsInfo(){return{size:Math.max(this.computedHeight,this.computedWidth),offsetX:this.offsetX,offsetY:this.offsetY}}_computeSize(t,e){const{sprite:i,hasSizeVV:s}=t,n=!!i.sdf,c=i.sdfPaddingRatio??.5,{rawWidth:a,rawHeight:f,sizeRatio:l,outlineSize:m}=this,d=i.rect;let u=a*l,p=f*l,g=0,x=0;if(n){const t=1/(1-c);if(u*=t,p*=t,s)this.computedWidth=u,this.computedHeight=p;else{const t=e&&a>f?u:a,o=f,s=m+2*1;this.computedWidth=Math.min(t+s,u),this.computedHeight=Math.min(o+s,p);const h=Math.max(i.width,i.height)/Math.max(u,p);g=(this.computedWidth-u)*h,x=(this.computedHeight-p)*h}}else this.computedWidth=u*(d.width/i.width),this.computedHeight=p*(d.height/i.height),g=2*o,x=2*o;const w=d.x+o-g/2,z=d.y+o-x/2,S=w+i.width+g,X=z+i.height+x;this.texXmin=h(w),this.texYmin=h(z),this.texXmax=r(S),this.texYmax=r(X),this.computedWidth*=(this.texXmax-this.texXmin)/(S-w),this.computedHeight*=(this.texYmax-this.texYmin)/(X-z),this.anchorX*=u/this.computedWidth,this.anchorY*=p/this.computedHeight}}function h(t,e=1e-7){const i=Math.ceil(t);return i-t<e?i:Math.floor(t)}function r(t,e=1e-7){const i=Math.floor(t);return t-i<e?i:Math.ceil(t)}export{s as ComputedMarkerParams};
