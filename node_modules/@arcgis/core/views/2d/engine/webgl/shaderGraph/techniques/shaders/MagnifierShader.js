/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t,a as o}from"../../../../../../../chunks/tslib.es6.js";import{GraphShaderModule as e,FragmentOutput as r,location as n,uniform as s,input as i,VertexInput as a,UniformGroup as p,FragmentInput as d}from"../../GraphShaderModule.js";import{Vec2 as l,Vec4 as c,texture2D as u,Float as y,ifElse as m,equal as w,Sampler2D as x,atan as f,pow as g,length as v,cos as h,sin as b}from"../../graph/glsl.js";import{magnifierBarrelFactor as k}from"./constants.js";class T extends a{}t([n(0,l)],T.prototype,"position",void 0);class C extends d{}class j extends p{}t([s(x)],j.prototype,"readbackTexture",void 0),t([s(x)],j.prototype,"maskTexture",void 0),t([s(x)],j.prototype,"overlayTexture",void 0),t([s(c)],j.prototype,"background",void 0),t([s(c)],j.prototype,"drawPos",void 0),t([s(y)],j.prototype,"maskEnabled",void 0),t([s(y)],j.prototype,"overlayEnabled",void 0);class E extends e{constructor(){super(...arguments),this.type="MagnifierShader"}vertex(t){const o=t.position,e=t.position.subtract(new l(.5)).multiply(this.config.drawPos.zw),r=this.config.drawPos.xy.add(e);return{glPosition:new c(r,0,1),texCoord:o}}fragment(t){let o=u(this.config.readbackTexture,P(t.texCoord));o=o.add(new y(1).subtract(o.a)).multiply(this.config.background);const e=m(w(this.config.maskEnabled,new y(1)),u(this.config.maskTexture,t.texCoord).a,new y(1));o=o.multiply(e);const n=m(w(this.config.overlayEnabled,new y(1)),u(this.config.overlayTexture,t.texCoord),new c(0)),s=new r;return s.fragColor=n.add(new y(1).subtract(n.a).multiply(o)),s}}function P(t){const o=t.multiply(new l(2)).subtract(1);return m(w(o.x,new y(0)).and(w(o.y,new y(0))),new l(.5),(()=>{const t=f(o.y,o.x),e=g(v(o),new y(k)),r=new l(h(t),b(t));return e.multiply(r).multiply(new l(.5)).add(new y(.5))}))}t([s(j)],E.prototype,"config",void 0),t([o(0,i(T))],E.prototype,"vertex",null),t([o(0,i(C))],E.prototype,"fragment",null);export{E as MagnifierShader};
