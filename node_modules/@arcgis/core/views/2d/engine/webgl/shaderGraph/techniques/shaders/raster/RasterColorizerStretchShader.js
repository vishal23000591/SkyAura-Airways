/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as o}from"../../../../../../../../chunks/tslib.es6.js";import{define as t,uniform as r,option as s}from"../../../GraphShaderModule.js";import{Vec4 as i,Float as e}from"../../../graph/glsl.js";import{BaseRasterColorizerShader as p}from"./BaseRasterColorizerShader.js";import{lookupColor as a,ColormapConfig as m}from"./lut.js";import{stretch as h,StretchConfig as l}from"./stretch.js";class n extends p{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(o){const t=this._getPixel(o);if(this.noOp)return t;let r=h(t,this.stretchConfig,this.useGamma);if(this.isMultiband)return r;if(r=new i(r.rrr,r.a),this.applyColormap){const o=this.useGamma?255:1;r=a(r,new e(o),this.colormapConfig)}return r}}o([t],n.prototype,"isMultiband",void 0),o([t],n.prototype,"applyColormap",void 0),o([t],n.prototype,"useGamma",void 0),o([t],n.prototype,"noOp",void 0),o([r(l)],n.prototype,"stretchConfig",void 0),o([s(m)],n.prototype,"colormapConfig",void 0);export{n as RasterColorizerStretchShader};
