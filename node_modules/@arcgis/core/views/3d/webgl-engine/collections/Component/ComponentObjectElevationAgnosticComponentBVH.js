/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{c as t,a as e}from"../../../../../chunks/vec32.js";import{create as n}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{create as o}from"../../../../../geometry/support/aaBoundingBox.js";import{newDoubleArray as s}from"../../../../../geometry/support/DoubleArray.js";import{ComponentObjectElevationAgnosticComponentGeometryBVH as i,intersectTriangleRangeForComponent as r}from"./ComponentObjectElevationAgnosticComponentGeometryBVH.js";import{ElevationAgnosticBVH as a}from"./ElevationAgnosticBVH.js";import{getVisibility as c}from"../../lib/ComponentUtils.js";import{MeshIntersectionOptions as l,computeInvDir as m,intersectAabbInvDir as h}from"../../lib/RayIntersections.js";class p{constructor(t,e,o,s,i,r,c,l){this.vertexData=t,this.vertexStride=e,this.indexData=o,this._components=s,this._componentAabbs3D=i,this.geometryMinZ=r,this.planetCenterZ=c,this.localMode=l,this.maxBspNodeDepth=6,this.minElementCountForBVH=10,this.minBspNodeElementCount=3,this._ray0=u,this._ray1=y,this._invDir=n(),this._componentVerticalOffsets=null,this._verticalOffset=null,this._tolerance=0,this._intersectionOptions=g,this._callback=D,this.rayDirectionC=n(),this._componentIndexMap=null,this._bvh=new a(s.count,this),this.componentIntersectionData=new Array(s.count)}get numComponents(){return this._components.count}get minZGlobal(){return this.geometryMinZ-this.planetCenterZ}getAabbs2D(){return this.localMode?this.getAabbs2DLocal():this.getAabbs2DGlobal()}getAabbs2DGlobal(){const{numComponents:t,planetCenterZ:e,minZGlobal:n}=this,o=s(4*t),i=this._componentAabbs3D;for(let s=0;s<t;++s){const t=6*s,r=i[t+0],a=i[t+1],c=i[t+2],l=i[t+3],m=i[t+4],h=n/(c-e),p=n/(i[t+5]-e),b=Math.min(r*h,r*p),_=Math.min(a*h,a*p),f=Math.max(l*h,l*p),u=Math.max(m*h,m*p),y=4*s;o[y+0]=b,o[y+1]=_,o[y+2]=f,o[y+3]=u}return o}getAabbs2DLocal(){const{numComponents:t}=this,e=s(4*t),n=this._componentAabbs3D;for(let o=0;o<t;++o){const t=6*o,s=n[t+0],i=n[t+1],r=n[t+3],a=n[t+4],c=4*o;e[c+0]=s,e[c+1]=i,e[c+2]=r,e[c+3]=a}return e}intersectRay(t,e,n,o,s,i,r){const{isVerticalRay:a}=r;this._ray0=t,this._ray1=e,this._componentVerticalOffsets=n,this._verticalOffset=o,this._tolerance=i,this._intersectionOptions=r,this._componentIndexMap=this._bvh.elementIndexMap,m(t,e,this._invDir),this._callback=s,this._bvh.intersectRay(t,e,a),this._callback=D}intersectRange(t,e){const n=this._componentIndexMap,{pickability:o,visibility:s}=this._components;for(let i=t;i<e;++i){const t=n?n[i]:i;c(o,t)&&s.isVisible(t)&&this._intersectComponent(t)}}getComponentTriangleCount(t){const e=this._components.offsets,n=e[t]/3;return e[t+1]/3-n}getComponentAabb3D(t,e){const n=this._componentAabbs3D,o=6*t;return e[0]=n[o],e[1]=n[o+1],e[2]=n[o+2],e[3]=n[o+3],e[4]=n[o+4],e[5]=n[o+5],e}_intersectComponent(n){const o=this.getComponentAabb3D(n,b);let s=!1;const{localMode:a,_componentVerticalOffsets:c,_verticalOffset:l,_ray0:m,_ray1:p,_invDir:u,planetCenterZ:y,_tolerance:D,rayDirectionC:g,componentIntersectionData:v}=this,{isVerticalRay:x}=this._intersectionOptions,A=this._components.offsets,d=t(_,m),M=t(f,p),O=c?.[n]??0,j=O+(l?.offset??0);if(0!==j&&(a?(d[2]=m[2]-j,M[2]=p[2]-j,s=!0):null!=l&&(l.componentOffset=O)),null==l||s||0===j||l.applyToAabb(o),!h(o,d,u,D))return;e(g,M,d);const V=A[n]/3,Z=A[n+1]/3,R=Z-V,B=(t,e,o)=>{this._callback(t,e,n,o)},{vertexData:I,vertexStride:k,indexData:G,_intersectionOptions:w}=this,{normalRequired:E}=w;if(R>C){let t=v[n];null==t&&(t=new i(n,I,k,G,V,Z,this.geometryMinZ,y,a),v[n]=t),t.intersectRay(d,M,x,s?0:j,B,E)}else{r(d,g,V,Z,G,I,k,s?0:j,y,E,B)}}}const b=o(),_=n(),f=n(),u=n(),y=n(),D=()=>{},g=new l,C=40;export{p as ComponentObjectElevationAgnosticComponentBVH};
