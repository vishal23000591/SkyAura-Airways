/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{create as e}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ChapmanApproximationParameters as r}from"./ChapmanApproximation.glsl.js";import{C as o}from"../../../chunks/ChapmanAtmosphere.glsl.js";import{ReloadableShaderModule as s}from"../webgl-engine/core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as t}from"../webgl-engine/core/shaderTechnique/ShaderTechnique.js";import{CompareFunction as i,BlendFactor as n}from"../../webgl/enums.js";import{makePipelineState as a,defaultColorWrite as l,copySource as m,simpleBlendingParams as c}from"../../webgl/renderState.js";class p extends r{constructor(){super(...arguments),this.innerFadeDistance=0,this.altitudeFade=0,this.backgroundColor=e()}}class d extends t{constructor(e,r){super(e,r,new s(o,(()=>import("./ChapmanAtmosphere.glsl.js"))))}initializePipeline(e){return a({blending:e.reduced?m:c(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),depthTest:{func:e.reduced?i.ALWAYS:i.LEQUAL},colorWrite:l})}}export{p as ChapmanAtmospherePassParameters,d as ChapmanAtmosphereTechnique};
