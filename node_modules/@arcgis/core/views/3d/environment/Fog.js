/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{lerp as t,smoothstep as s}from"../../../core/mathUtils.js";import{watch as r,syncAndInitial as a}from"../../../core/reactiveUtils.js";import"../../../core/Logger.js";import"../../../core/has.js";import"../../../core/RandomLCG.js";import"../../../core/Error.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{c as o,n,e as m,g as h,m as p,l as c}from"../../../chunks/vec32.js";import{fromValues as d,create as l}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{getReferenceEllipsoid as _}from"../../../geometry/ellipsoidUtils.js";import{InternalRenderCategory as g}from"../webgl.js";import{F as u}from"../../../chunks/Fog.glsl.js";import{FogTechnique as f}from"./FogTechnique.js";import{heightLimit as w}from"./weather.js";import{TransparentEnvironment as P}from"../webgl-engine/effects/TransparentEnvironment.js";import{RenderRequestType as y}from"../webgl-engine/lib/basicInterfaces.js";import{DepthStencilAttachment as b}from"../../webgl/enums.js";const v=.95,j=1;let F=class extends P{constructor(e){super(e),this.requireGeometryDepth=!0,this._newParameters=new R,this._oldParameters=new R,this._fadedParameters=new R,this._parameters=this._newParameters,this._passParameters=new u;const t=_(e.view.spatialReference);this._planetRadius=t.radius,this._atmosphereRadius=t.radius+t.atmosphereHeight,e.view.stage?.renderView.techniques.precompile(f)}toogle(){this.view.environment.atmosphereEnabled&&this.view.environment.weather?this._enable():this._disable()}initialize(){this.addHandles([r((()=>this.view.environment.atmosphereEnabled),(()=>this.toogle()),a),r((()=>this.view.environment.weather),(()=>this.toogle()),a),r((()=>this._updateFogParameters()),(()=>{}),a)]),this.addHandles(r((()=>this._fadeFactor),(e=>this._fade(e)),a))}get _fadeFactor(){return this.view.stage?.renderer.renderContext.bind.clouds.fadeFactor??1}_fade(e){const{_newParameters:t,_oldParameters:s}=this;e>=1?(this._parameters=t,this._oldParameters.copyFrom(this._newParameters)):e<=0?this._parameters=s:(this._fadedParameters.lerp(s,t,e),this._parameters=this._fadedParameters)}_updateFogParameters(){const e=this.view.environment.weather,s="foggy"===e.type||"snowy"===e.type||"rainy"===e.type;this._newParameters.strength="foggy"===e.type?t(3e-5,.005,e.fogStrength**3):"snowy"===e.type||"rainy"===e.type?t(4e-6,2e-4,(e.precipitation??0)**3):0,this._newParameters.amount=s?1:0,"foggy"!==e.type&&"snowy"!==e.type||o(this._newParameters.color,x),"rainy"===e.type&&o(this._newParameters.color,q),this._fadeFactor>=1&&this._oldParameters.copyFrom(this._newParameters),this.requestRender(y.UPDATE)}render(e){const t=e.find((({name:e})=>e===g.TRANSPARENT_ENVIRONMENT));if(0===this._parameters.amount)return t;if(this._update(),this._passParameters.amount<=0)return t;const s=this.techniques.get(f);if(!s.compiled)return this.requestRender(y.UPDATE),t;const r=this.renderingContext,a=t.getAttachment(b);return t.attachDepth(null),r.bindFramebuffer(t.fbo),r.bindTechnique(s,this.bindParameters,this._passParameters),r.screen.draw(),t.attachDepth(a),t}_update(){const e=this.bindParameters.camera;n(E,e.eye);const t=Math.max(0,m(E,this.bindParameters.lighting.mainLight.direction)),r=this._parameters.color;h(T,r,.1),p(this._passParameters.color,T,r,t);const a=c(e.eye);this._passParameters.atmosphereC=a**2-this._atmosphereRadius**2,this._passParameters.amount=(1-s(v*w,j*w,Math.abs(a-this._planetRadius)))*this._parameters.amount,this._passParameters.strength=this._parameters.strength}};F=e([i("esri.views.3d.environment.Fog")],F);class R{constructor(){this.color=l(),this.strength=0,this.amount=0}copyFrom(e){this.amount=e.amount,this.strength=e.strength,o(this.color,e.color)}lerp(e,s,r){this.amount=t(e.amount,s.amount,r),this.strength=t(e.strength,s.strength,r),p(this.color,e.color,s.color,r)}}const E=l(),T=l(),q=d(.5,.5,.5),x=d(1.5,1.5,1.5);export{F as Fog,R as FogParameters};
