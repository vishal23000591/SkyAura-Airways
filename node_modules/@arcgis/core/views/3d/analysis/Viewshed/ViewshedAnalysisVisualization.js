/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as s}from"../../../../chunks/tslib.es6.js";import i from"../../../../core/Accessor.js";import{destroyHandle as e}from"../../../../core/handleUtils.js";import"../../../../core/has.js";import{mapCollection as o}from"../../../../core/mapCollectionUtils.js";import{watch as t,initial as r}from"../../../../core/reactiveUtils.js";import{property as a}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as l}from"../../../../core/accessorSupport/decorators/subclass.js";import n from"./ViewshedVisualization.js";let c=class extends i{get visible(){return this.analysisViewData.visible}constructor(s){super(s)}initialize(){const s=this.analysisViewData,i=o((()=>this.analysisViewData.viewshedComputedDataHandles),(({viewshedComputedData:i})=>{const e=new n({view:this.view,viewshedComputedData:i,analysisViewData:s,isDecoration:this.isDecoration});return{visualization:e,remove:()=>e.destroy()}}));this._viewshedVisualizations=i,this.addHandles([e(i),t((()=>this.visible),(s=>this._viewshedVisualizations.forEach((({visualization:i})=>i.visible=s))),r)])}get test(){}};s([a({constructOnly:!0})],c.prototype,"analysisViewData",void 0),s([a({constructOnly:!0,nonNullable:!0})],c.prototype,"view",void 0),s([a({constructOnly:!0})],c.prototype,"isDecoration",void 0),s([a()],c.prototype,"visible",null),c=s([l("esri.views.3d.analysis.Viewshed.ViewshedAnalysisVisualization")],c);export{c as ViewshedAnalysisVisualization};
