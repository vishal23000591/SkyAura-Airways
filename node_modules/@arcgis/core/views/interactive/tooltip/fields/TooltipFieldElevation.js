/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import{zeroMeters as o,toUnit as r,createLength as e}from"../../../../core/quantityUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/has.js";import"../../../../core/Logger.js";import"../../../../core/RandomLCG.js";import{subclass as i}from"../../../../core/accessorSupport/decorators/subclass.js";import{makeQuantityParser as a}from"./parsingAndFormattingUtils.js";import{TooltipField as n}from"./TooltipField.js";let c=class extends n{constructor(t){super(t),this.showAsZ=!1}normalizeCtorArgs(t){const s=t=>t.inputUnitInfos.verticalLength.unit;return{name:"elevation",actual:o,parse:a({createQuantity:(t,o)=>e(t,s(o))}),format:(t,o)=>o.formatters.verticalLength(t),formatForInputMode:(t,o)=>o.formatters.scalar(r(t,s(o))),suffix:t=>t.inputUnitInfos.verticalLength.abbreviation,title:t=>t.messages.sketch[this.showAsZ?"z":"elevation"],unlockOnVertexPlacement:!1,...t}}};t([s()],c.prototype,"showAsZ",void 0),c=t([i("esri.views.interactive.tooltip.fields.TooltipFieldElevation")],c);export{c as TooltipFieldElevation};
