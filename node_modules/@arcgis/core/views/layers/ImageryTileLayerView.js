/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import r from"../../core/Error.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{addMultidimensionalFieldValues as a,commonRasterFieldNames as o,rasterFieldPrefix as n}from"../../layers/support/rasterFieldUtils.js";import{combineTimeExtent as l}from"../../layers/support/timeSupport.js";import{isFunctionRaster as u}from"../../layers/support/rasterDatasets/datasetUtils.js";import{getDefaultDatumTransformationForDataset as p,projectDatasetExtent as c,getSourceScale as m}from"../../layers/support/rasterFunctions/rasterProjectionHelper.js";import{getFetchPopupTemplate as y}from"./support/popupUtils.js";const f=f=>{let d=class extends f{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return l(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?p(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(e){try{return!this.layer.loaded||!!c(this.layer.serviceRasterInfo,e)}catch{return!1}}async fetchPopupFeaturesAtLocation(e,s){const{layer:i}=this;if(!e)throw new r("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:l}=i,p=y(i,s);if(!l||null==p)return[];const c=[],{value:m,magdirValue:f,processedValue:d}=await i.identify(e,{timeExtent:this.timeExtent,signal:s?.signal});let h="";if(m?.length){h="imagery-tile"===i.type&&i.hasStandardTime()&&null!=m[0]?m.map((e=>i.getStandardTimeValue(e))).join(", "):m.join(", ");const e={ObjectId:0};e[o.servicePixelValue]="imagery-tile"===i.type&&u(i.raster)?d?.join(", "):h,e[o.rawServicePixelValue]=h;const r=i.raster?.rasterInfo??i.serviceRasterInfo,s=r?.attributeTable;if(null!=s){const{fields:t,features:r}=s,i=t.find((({name:e})=>"value"===e.toLowerCase())),a=e[o.servicePixelValue],l=i?r.find((e=>String(e.attributes[i.name])===a)):null;if(l)for(const s in l.attributes)if(l.attributes.hasOwnProperty(s)){e[n+s]=l.attributes[s]}}const l=r?.dataType;"vector-magdir"!==l&&"vector-uv"!==l||(e[o.magnitude]=f?.[0],e[o.direction]=f?.[1]);const{multidimensionalDefinition:p}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});a(i.rasterFields,e,p);const y=new t({geometry:this.fullExtent?.clone(),attributes:e,layer:i,sourceLayer:i});c.push(y)}return c}async getSourceScale(){return await this.layer.load(),m(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return c(this.layer.serviceRasterInfo,this.view.spatialReference)}};return e([s()],d.prototype,"fullExtent",null),e([s()],d.prototype,"layer",void 0),e([s({readOnly:!0})],d.prototype,"timeExtent",null),e([s()],d.prototype,"tileInfo",void 0),e([s({readOnly:!0})],d.prototype,"hasTilingEffects",null),e([s()],d.prototype,"datumTransformation",null),d=e([i("esri.views.layers.ImageryTileLayerView")],d),d};export{f as default};
